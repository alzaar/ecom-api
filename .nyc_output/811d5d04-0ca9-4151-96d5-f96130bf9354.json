{"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\configData.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\configData.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"2":{"start":{"line":7,"column":16},"end":{"line":11,"column":1}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"4":{"start":{"line":13,"column":19},"end":{"line":17,"column":1}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["configData.js"],"names":["dummyUser","username","email","password","dummyProduct","name","price","description"],"mappings":";;;;;;AAAO,IAAMA,SAAS,GAAG;AACrBC,EAAAA,QAAQ,EAAE,MADW;AAErBC,EAAAA,KAAK,EAAE,eAFc;AAGrBC,EAAAA,QAAQ,EAAE;AAHW,CAAlB;;AAMA,IAAMC,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE,aADkB;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,WAAW,EAAE;AAHW,CAArB","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\","sourcesContent":["export const dummyUser = {\r\n    username: 'test',\r\n    email: 'test@test.com',\r\n    password: 'test13',\r\n}\r\n\r\nexport const dummyProduct = {\r\n    name: 'Random Book',\r\n    price: 45,\r\n    description: 'Book\\'s description',\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3027a0c541e515d126d41f180c54bec97dbf88ae","contentHash":"44da93c0726053bece8fe901797515fa465cfc190f3f2b3a6884c610902dba76"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\order.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\order.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":30},"end":{"line":5,"column":86}},"2":{"start":{"line":7,"column":12},"end":{"line":7,"column":52}},"3":{"start":{"line":9,"column":16},"end":{"line":9,"column":60}},"4":{"start":{"line":11,"column":14},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":13},"end":{"line":13,"column":66}},"6":{"start":{"line":15,"column":22},"end":{"line":15,"column":73}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":64}},"8":{"start":{"line":19,"column":15},"end":{"line":19,"column":70}},"9":{"start":{"line":21,"column":18},"end":{"line":21,"column":42}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}},"12":{"start":{"line":28,"column":0},"end":{"line":28,"column":43}},"13":{"start":{"line":32,"column":0},"end":{"line":301,"column":3}},"14":{"start":{"line":33,"column":2},"end":{"line":39,"column":5}},"15":{"start":{"line":34,"column":4},"end":{"line":38,"column":7}},"16":{"start":{"line":35,"column":6},"end":{"line":37,"column":9}},"17":{"start":{"line":36,"column":8},"end":{"line":36,"column":15}},"18":{"start":{"line":41,"column":2},"end":{"line":70,"column":5}},"19":{"start":{"line":42,"column":4},"end":{"line":57,"column":7}},"20":{"start":{"line":43,"column":6},"end":{"line":56,"column":9}},"21":{"start":{"line":44,"column":8},"end":{"line":55,"column":11}},"22":{"start":{"line":47,"column":10},"end":{"line":54,"column":13}},"23":{"start":{"line":48,"column":12},"end":{"line":48,"column":40}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":43}},"25":{"start":{"line":50,"column":12},"end":{"line":50,"column":63}},"26":{"start":{"line":51,"column":12},"end":{"line":51,"column":64}},"27":{"start":{"line":52,"column":12},"end":{"line":52,"column":48}},"28":{"start":{"line":53,"column":12},"end":{"line":53,"column":19}},"29":{"start":{"line":59,"column":4},"end":{"line":69,"column":7}},"30":{"start":{"line":60,"column":6},"end":{"line":68,"column":9}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":36}},"32":{"start":{"line":62,"column":8},"end":{"line":62,"column":39}},"33":{"start":{"line":63,"column":8},"end":{"line":63,"column":58}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":50}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":147}},"36":{"start":{"line":66,"column":8},"end":{"line":66,"column":95}},"37":{"start":{"line":67,"column":8},"end":{"line":67,"column":15}},"38":{"start":{"line":72,"column":2},"end":{"line":109,"column":5}},"39":{"start":{"line":73,"column":4},"end":{"line":96,"column":7}},"40":{"start":{"line":74,"column":6},"end":{"line":95,"column":9}},"41":{"start":{"line":75,"column":8},"end":{"line":75,"column":46}},"42":{"start":{"line":76,"column":8},"end":{"line":94,"column":11}},"43":{"start":{"line":77,"column":10},"end":{"line":93,"column":13}},"44":{"start":{"line":81,"column":12},"end":{"line":92,"column":15}},"45":{"start":{"line":84,"column":14},"end":{"line":84,"column":42}},"46":{"start":{"line":85,"column":14},"end":{"line":85,"column":45}},"47":{"start":{"line":86,"column":14},"end":{"line":86,"column":65}},"48":{"start":{"line":87,"column":14},"end":{"line":87,"column":65}},"49":{"start":{"line":88,"column":14},"end":{"line":88,"column":66}},"50":{"start":{"line":89,"column":14},"end":{"line":89,"column":50}},"51":{"start":{"line":90,"column":14},"end":{"line":90,"column":81}},"52":{"start":{"line":91,"column":14},"end":{"line":91,"column":21}},"53":{"start":{"line":98,"column":4},"end":{"line":108,"column":7}},"54":{"start":{"line":99,"column":6},"end":{"line":107,"column":9}},"55":{"start":{"line":100,"column":8},"end":{"line":100,"column":36}},"56":{"start":{"line":101,"column":8},"end":{"line":101,"column":39}},"57":{"start":{"line":102,"column":8},"end":{"line":102,"column":58}},"58":{"start":{"line":103,"column":8},"end":{"line":103,"column":50}},"59":{"start":{"line":104,"column":8},"end":{"line":104,"column":147}},"60":{"start":{"line":105,"column":8},"end":{"line":105,"column":95}},"61":{"start":{"line":106,"column":8},"end":{"line":106,"column":15}},"62":{"start":{"line":111,"column":2},"end":{"line":148,"column":5}},"63":{"start":{"line":112,"column":4},"end":{"line":135,"column":7}},"64":{"start":{"line":113,"column":6},"end":{"line":134,"column":9}},"65":{"start":{"line":114,"column":8},"end":{"line":114,"column":46}},"66":{"start":{"line":115,"column":8},"end":{"line":133,"column":11}},"67":{"start":{"line":116,"column":10},"end":{"line":132,"column":13}},"68":{"start":{"line":120,"column":12},"end":{"line":131,"column":15}},"69":{"start":{"line":123,"column":14},"end":{"line":123,"column":42}},"70":{"start":{"line":124,"column":14},"end":{"line":124,"column":45}},"71":{"start":{"line":125,"column":14},"end":{"line":125,"column":65}},"72":{"start":{"line":126,"column":14},"end":{"line":126,"column":65}},"73":{"start":{"line":127,"column":14},"end":{"line":127,"column":66}},"74":{"start":{"line":128,"column":14},"end":{"line":128,"column":50}},"75":{"start":{"line":129,"column":14},"end":{"line":129,"column":81}},"76":{"start":{"line":130,"column":14},"end":{"line":130,"column":21}},"77":{"start":{"line":137,"column":4},"end":{"line":147,"column":7}},"78":{"start":{"line":138,"column":6},"end":{"line":146,"column":9}},"79":{"start":{"line":139,"column":8},"end":{"line":139,"column":36}},"80":{"start":{"line":140,"column":8},"end":{"line":140,"column":39}},"81":{"start":{"line":141,"column":8},"end":{"line":141,"column":58}},"82":{"start":{"line":142,"column":8},"end":{"line":142,"column":50}},"83":{"start":{"line":143,"column":8},"end":{"line":143,"column":147}},"84":{"start":{"line":144,"column":8},"end":{"line":144,"column":95}},"85":{"start":{"line":145,"column":8},"end":{"line":145,"column":15}},"86":{"start":{"line":150,"column":2},"end":{"line":186,"column":5}},"87":{"start":{"line":151,"column":4},"end":{"line":173,"column":7}},"88":{"start":{"line":152,"column":6},"end":{"line":172,"column":9}},"89":{"start":{"line":153,"column":8},"end":{"line":153,"column":46}},"90":{"start":{"line":154,"column":8},"end":{"line":171,"column":11}},"91":{"start":{"line":155,"column":10},"end":{"line":170,"column":13}},"92":{"start":{"line":158,"column":12},"end":{"line":169,"column":15}},"93":{"start":{"line":161,"column":14},"end":{"line":161,"column":42}},"94":{"start":{"line":162,"column":14},"end":{"line":162,"column":45}},"95":{"start":{"line":163,"column":14},"end":{"line":163,"column":65}},"96":{"start":{"line":164,"column":14},"end":{"line":164,"column":65}},"97":{"start":{"line":165,"column":14},"end":{"line":165,"column":66}},"98":{"start":{"line":166,"column":14},"end":{"line":166,"column":50}},"99":{"start":{"line":167,"column":14},"end":{"line":167,"column":81}},"100":{"start":{"line":168,"column":14},"end":{"line":168,"column":21}},"101":{"start":{"line":175,"column":4},"end":{"line":185,"column":7}},"102":{"start":{"line":176,"column":6},"end":{"line":184,"column":9}},"103":{"start":{"line":177,"column":8},"end":{"line":177,"column":36}},"104":{"start":{"line":178,"column":8},"end":{"line":178,"column":39}},"105":{"start":{"line":179,"column":8},"end":{"line":179,"column":58}},"106":{"start":{"line":180,"column":8},"end":{"line":180,"column":50}},"107":{"start":{"line":181,"column":8},"end":{"line":181,"column":147}},"108":{"start":{"line":182,"column":8},"end":{"line":182,"column":95}},"109":{"start":{"line":183,"column":8},"end":{"line":183,"column":15}},"110":{"start":{"line":188,"column":2},"end":{"line":224,"column":5}},"111":{"start":{"line":189,"column":4},"end":{"line":211,"column":7}},"112":{"start":{"line":190,"column":6},"end":{"line":210,"column":9}},"113":{"start":{"line":191,"column":8},"end":{"line":191,"column":46}},"114":{"start":{"line":192,"column":8},"end":{"line":209,"column":11}},"115":{"start":{"line":193,"column":10},"end":{"line":208,"column":13}},"116":{"start":{"line":196,"column":12},"end":{"line":207,"column":15}},"117":{"start":{"line":199,"column":14},"end":{"line":199,"column":42}},"118":{"start":{"line":200,"column":14},"end":{"line":200,"column":45}},"119":{"start":{"line":201,"column":14},"end":{"line":201,"column":65}},"120":{"start":{"line":202,"column":14},"end":{"line":202,"column":65}},"121":{"start":{"line":203,"column":14},"end":{"line":203,"column":66}},"122":{"start":{"line":204,"column":14},"end":{"line":204,"column":50}},"123":{"start":{"line":205,"column":14},"end":{"line":205,"column":81}},"124":{"start":{"line":206,"column":14},"end":{"line":206,"column":21}},"125":{"start":{"line":213,"column":4},"end":{"line":223,"column":7}},"126":{"start":{"line":214,"column":6},"end":{"line":222,"column":9}},"127":{"start":{"line":215,"column":8},"end":{"line":215,"column":36}},"128":{"start":{"line":216,"column":8},"end":{"line":216,"column":39}},"129":{"start":{"line":217,"column":8},"end":{"line":217,"column":58}},"130":{"start":{"line":218,"column":8},"end":{"line":218,"column":50}},"131":{"start":{"line":219,"column":8},"end":{"line":219,"column":147}},"132":{"start":{"line":220,"column":8},"end":{"line":220,"column":95}},"133":{"start":{"line":221,"column":8},"end":{"line":221,"column":15}},"134":{"start":{"line":226,"column":2},"end":{"line":262,"column":5}},"135":{"start":{"line":227,"column":4},"end":{"line":249,"column":7}},"136":{"start":{"line":228,"column":6},"end":{"line":248,"column":9}},"137":{"start":{"line":229,"column":8},"end":{"line":229,"column":46}},"138":{"start":{"line":230,"column":8},"end":{"line":247,"column":11}},"139":{"start":{"line":231,"column":10},"end":{"line":246,"column":13}},"140":{"start":{"line":235,"column":12},"end":{"line":245,"column":15}},"141":{"start":{"line":238,"column":14},"end":{"line":238,"column":42}},"142":{"start":{"line":239,"column":14},"end":{"line":239,"column":45}},"143":{"start":{"line":240,"column":14},"end":{"line":240,"column":65}},"144":{"start":{"line":241,"column":14},"end":{"line":241,"column":65}},"145":{"start":{"line":242,"column":14},"end":{"line":242,"column":66}},"146":{"start":{"line":243,"column":14},"end":{"line":243,"column":50}},"147":{"start":{"line":244,"column":14},"end":{"line":244,"column":21}},"148":{"start":{"line":251,"column":4},"end":{"line":261,"column":7}},"149":{"start":{"line":252,"column":6},"end":{"line":260,"column":9}},"150":{"start":{"line":253,"column":8},"end":{"line":253,"column":36}},"151":{"start":{"line":254,"column":8},"end":{"line":254,"column":39}},"152":{"start":{"line":255,"column":8},"end":{"line":255,"column":58}},"153":{"start":{"line":256,"column":8},"end":{"line":256,"column":50}},"154":{"start":{"line":257,"column":8},"end":{"line":257,"column":147}},"155":{"start":{"line":258,"column":8},"end":{"line":258,"column":95}},"156":{"start":{"line":259,"column":8},"end":{"line":259,"column":15}},"157":{"start":{"line":264,"column":2},"end":{"line":300,"column":5}},"158":{"start":{"line":265,"column":4},"end":{"line":287,"column":7}},"159":{"start":{"line":266,"column":6},"end":{"line":286,"column":9}},"160":{"start":{"line":267,"column":8},"end":{"line":267,"column":46}},"161":{"start":{"line":268,"column":8},"end":{"line":285,"column":11}},"162":{"start":{"line":269,"column":10},"end":{"line":284,"column":13}},"163":{"start":{"line":273,"column":12},"end":{"line":283,"column":15}},"164":{"start":{"line":276,"column":14},"end":{"line":276,"column":42}},"165":{"start":{"line":277,"column":14},"end":{"line":277,"column":45}},"166":{"start":{"line":278,"column":14},"end":{"line":278,"column":65}},"167":{"start":{"line":279,"column":14},"end":{"line":279,"column":65}},"168":{"start":{"line":280,"column":14},"end":{"line":280,"column":66}},"169":{"start":{"line":281,"column":14},"end":{"line":281,"column":50}},"170":{"start":{"line":282,"column":14},"end":{"line":282,"column":21}},"171":{"start":{"line":289,"column":4},"end":{"line":299,"column":7}},"172":{"start":{"line":290,"column":6},"end":{"line":298,"column":9}},"173":{"start":{"line":291,"column":8},"end":{"line":291,"column":36}},"174":{"start":{"line":292,"column":8},"end":{"line":292,"column":39}},"175":{"start":{"line":293,"column":8},"end":{"line":293,"column":58}},"176":{"start":{"line":294,"column":8},"end":{"line":294,"column":50}},"177":{"start":{"line":295,"column":8},"end":{"line":295,"column":147}},"178":{"start":{"line":296,"column":8},"end":{"line":296,"column":95}},"179":{"start":{"line":297,"column":8},"end":{"line":297,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":32,"column":19},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":35},"end":{"line":301,"column":1}},"line":32},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":13},"end":{"line":33,"column":14}},"loc":{"start":{"line":33,"column":29},"end":{"line":39,"column":3}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":37},"end":{"line":34,"column":38}},"loc":{"start":{"line":34,"column":52},"end":{"line":38,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":38},"end":{"line":35,"column":39}},"loc":{"start":{"line":35,"column":53},"end":{"line":37,"column":7}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":38},"end":{"line":41,"column":39}},"loc":{"start":{"line":41,"column":50},"end":{"line":70,"column":3}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":51},"end":{"line":42,"column":52}},"loc":{"start":{"line":42,"column":67},"end":{"line":57,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":62},"end":{"line":43,"column":63}},"loc":{"start":{"line":43,"column":75},"end":{"line":56,"column":7}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":23},"end":{"line":46,"column":24}},"loc":{"start":{"line":46,"column":36},"end":{"line":55,"column":9}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":90},"end":{"line":47,"column":91}},"loc":{"start":{"line":47,"column":110},"end":{"line":54,"column":11}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":60},"end":{"line":59,"column":61}},"loc":{"start":{"line":59,"column":76},"end":{"line":69,"column":5}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":79},"end":{"line":60,"column":80}},"loc":{"start":{"line":60,"column":99},"end":{"line":68,"column":7}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":72,"column":33},"end":{"line":72,"column":34}},"loc":{"start":{"line":72,"column":45},"end":{"line":109,"column":3}},"line":72},"12":{"name":"(anonymous_12)","decl":{"start":{"line":73,"column":48},"end":{"line":73,"column":49}},"loc":{"start":{"line":73,"column":64},"end":{"line":96,"column":5}},"line":73},"13":{"name":"(anonymous_13)","decl":{"start":{"line":74,"column":62},"end":{"line":74,"column":63}},"loc":{"start":{"line":74,"column":75},"end":{"line":95,"column":7}},"line":74},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":70},"end":{"line":76,"column":71}},"loc":{"start":{"line":76,"column":83},"end":{"line":94,"column":9}},"line":76},"15":{"name":"(anonymous_15)","decl":{"start":{"line":80,"column":25},"end":{"line":80,"column":26}},"loc":{"start":{"line":80,"column":38},"end":{"line":93,"column":11}},"line":80},"16":{"name":"(anonymous_16)","decl":{"start":{"line":83,"column":19},"end":{"line":83,"column":20}},"loc":{"start":{"line":83,"column":39},"end":{"line":92,"column":13}},"line":83},"17":{"name":"(anonymous_17)","decl":{"start":{"line":98,"column":60},"end":{"line":98,"column":61}},"loc":{"start":{"line":98,"column":76},"end":{"line":108,"column":5}},"line":98},"18":{"name":"(anonymous_18)","decl":{"start":{"line":99,"column":80},"end":{"line":99,"column":81}},"loc":{"start":{"line":99,"column":100},"end":{"line":107,"column":7}},"line":99},"19":{"name":"(anonymous_19)","decl":{"start":{"line":111,"column":35},"end":{"line":111,"column":36}},"loc":{"start":{"line":111,"column":47},"end":{"line":148,"column":3}},"line":111},"20":{"name":"(anonymous_20)","decl":{"start":{"line":112,"column":50},"end":{"line":112,"column":51}},"loc":{"start":{"line":112,"column":66},"end":{"line":135,"column":5}},"line":112},"21":{"name":"(anonymous_21)","decl":{"start":{"line":113,"column":62},"end":{"line":113,"column":63}},"loc":{"start":{"line":113,"column":75},"end":{"line":134,"column":7}},"line":113},"22":{"name":"(anonymous_22)","decl":{"start":{"line":115,"column":70},"end":{"line":115,"column":71}},"loc":{"start":{"line":115,"column":83},"end":{"line":133,"column":9}},"line":115},"23":{"name":"(anonymous_23)","decl":{"start":{"line":119,"column":25},"end":{"line":119,"column":26}},"loc":{"start":{"line":119,"column":38},"end":{"line":132,"column":11}},"line":119},"24":{"name":"(anonymous_24)","decl":{"start":{"line":122,"column":19},"end":{"line":122,"column":20}},"loc":{"start":{"line":122,"column":39},"end":{"line":131,"column":13}},"line":122},"25":{"name":"(anonymous_25)","decl":{"start":{"line":137,"column":60},"end":{"line":137,"column":61}},"loc":{"start":{"line":137,"column":76},"end":{"line":147,"column":5}},"line":137},"26":{"name":"(anonymous_26)","decl":{"start":{"line":138,"column":85},"end":{"line":138,"column":86}},"loc":{"start":{"line":138,"column":105},"end":{"line":146,"column":7}},"line":138},"27":{"name":"(anonymous_27)","decl":{"start":{"line":150,"column":35},"end":{"line":150,"column":36}},"loc":{"start":{"line":150,"column":47},"end":{"line":186,"column":3}},"line":150},"28":{"name":"(anonymous_28)","decl":{"start":{"line":151,"column":53},"end":{"line":151,"column":54}},"loc":{"start":{"line":151,"column":69},"end":{"line":173,"column":5}},"line":151},"29":{"name":"(anonymous_29)","decl":{"start":{"line":152,"column":62},"end":{"line":152,"column":63}},"loc":{"start":{"line":152,"column":75},"end":{"line":172,"column":7}},"line":152},"30":{"name":"(anonymous_30)","decl":{"start":{"line":154,"column":70},"end":{"line":154,"column":71}},"loc":{"start":{"line":154,"column":83},"end":{"line":171,"column":9}},"line":154},"31":{"name":"(anonymous_31)","decl":{"start":{"line":157,"column":25},"end":{"line":157,"column":26}},"loc":{"start":{"line":157,"column":38},"end":{"line":170,"column":11}},"line":157},"32":{"name":"(anonymous_32)","decl":{"start":{"line":160,"column":19},"end":{"line":160,"column":20}},"loc":{"start":{"line":160,"column":39},"end":{"line":169,"column":13}},"line":160},"33":{"name":"(anonymous_33)","decl":{"start":{"line":175,"column":60},"end":{"line":175,"column":61}},"loc":{"start":{"line":175,"column":76},"end":{"line":185,"column":5}},"line":175},"34":{"name":"(anonymous_34)","decl":{"start":{"line":176,"column":85},"end":{"line":176,"column":86}},"loc":{"start":{"line":176,"column":105},"end":{"line":184,"column":7}},"line":176},"35":{"name":"(anonymous_35)","decl":{"start":{"line":188,"column":34},"end":{"line":188,"column":35}},"loc":{"start":{"line":188,"column":46},"end":{"line":224,"column":3}},"line":188},"36":{"name":"(anonymous_36)","decl":{"start":{"line":189,"column":52},"end":{"line":189,"column":53}},"loc":{"start":{"line":189,"column":68},"end":{"line":211,"column":5}},"line":189},"37":{"name":"(anonymous_37)","decl":{"start":{"line":190,"column":62},"end":{"line":190,"column":63}},"loc":{"start":{"line":190,"column":75},"end":{"line":210,"column":7}},"line":190},"38":{"name":"(anonymous_38)","decl":{"start":{"line":192,"column":70},"end":{"line":192,"column":71}},"loc":{"start":{"line":192,"column":83},"end":{"line":209,"column":9}},"line":192},"39":{"name":"(anonymous_39)","decl":{"start":{"line":195,"column":25},"end":{"line":195,"column":26}},"loc":{"start":{"line":195,"column":38},"end":{"line":208,"column":11}},"line":195},"40":{"name":"(anonymous_40)","decl":{"start":{"line":198,"column":19},"end":{"line":198,"column":20}},"loc":{"start":{"line":198,"column":39},"end":{"line":207,"column":13}},"line":198},"41":{"name":"(anonymous_41)","decl":{"start":{"line":213,"column":60},"end":{"line":213,"column":61}},"loc":{"start":{"line":213,"column":76},"end":{"line":223,"column":5}},"line":213},"42":{"name":"(anonymous_42)","decl":{"start":{"line":214,"column":80},"end":{"line":214,"column":81}},"loc":{"start":{"line":214,"column":100},"end":{"line":222,"column":7}},"line":214},"43":{"name":"(anonymous_43)","decl":{"start":{"line":226,"column":37},"end":{"line":226,"column":38}},"loc":{"start":{"line":226,"column":49},"end":{"line":262,"column":3}},"line":226},"44":{"name":"(anonymous_44)","decl":{"start":{"line":227,"column":52},"end":{"line":227,"column":53}},"loc":{"start":{"line":227,"column":68},"end":{"line":249,"column":5}},"line":227},"45":{"name":"(anonymous_45)","decl":{"start":{"line":228,"column":62},"end":{"line":228,"column":63}},"loc":{"start":{"line":228,"column":75},"end":{"line":248,"column":7}},"line":228},"46":{"name":"(anonymous_46)","decl":{"start":{"line":230,"column":70},"end":{"line":230,"column":71}},"loc":{"start":{"line":230,"column":83},"end":{"line":247,"column":9}},"line":230},"47":{"name":"(anonymous_47)","decl":{"start":{"line":234,"column":25},"end":{"line":234,"column":26}},"loc":{"start":{"line":234,"column":38},"end":{"line":246,"column":11}},"line":234},"48":{"name":"(anonymous_48)","decl":{"start":{"line":237,"column":19},"end":{"line":237,"column":20}},"loc":{"start":{"line":237,"column":39},"end":{"line":245,"column":13}},"line":237},"49":{"name":"(anonymous_49)","decl":{"start":{"line":251,"column":60},"end":{"line":251,"column":61}},"loc":{"start":{"line":251,"column":76},"end":{"line":261,"column":5}},"line":251},"50":{"name":"(anonymous_50)","decl":{"start":{"line":252,"column":86},"end":{"line":252,"column":87}},"loc":{"start":{"line":252,"column":106},"end":{"line":260,"column":7}},"line":252},"51":{"name":"(anonymous_51)","decl":{"start":{"line":264,"column":38},"end":{"line":264,"column":39}},"loc":{"start":{"line":264,"column":50},"end":{"line":300,"column":3}},"line":264},"52":{"name":"(anonymous_52)","decl":{"start":{"line":265,"column":53},"end":{"line":265,"column":54}},"loc":{"start":{"line":265,"column":69},"end":{"line":287,"column":5}},"line":265},"53":{"name":"(anonymous_53)","decl":{"start":{"line":266,"column":62},"end":{"line":266,"column":63}},"loc":{"start":{"line":266,"column":75},"end":{"line":286,"column":7}},"line":266},"54":{"name":"(anonymous_54)","decl":{"start":{"line":268,"column":70},"end":{"line":268,"column":71}},"loc":{"start":{"line":268,"column":83},"end":{"line":285,"column":9}},"line":268},"55":{"name":"(anonymous_55)","decl":{"start":{"line":272,"column":25},"end":{"line":272,"column":26}},"loc":{"start":{"line":272,"column":38},"end":{"line":284,"column":11}},"line":272},"56":{"name":"(anonymous_56)","decl":{"start":{"line":275,"column":19},"end":{"line":275,"column":20}},"loc":{"start":{"line":275,"column":39},"end":{"line":283,"column":13}},"line":275},"57":{"name":"(anonymous_57)","decl":{"start":{"line":289,"column":60},"end":{"line":289,"column":61}},"loc":{"start":{"line":289,"column":76},"end":{"line":299,"column":5}},"line":289},"58":{"name":"(anonymous_58)","decl":{"start":{"line":290,"column":91},"end":{"line":290,"column":92}},"loc":{"start":{"line":290,"column":111},"end":{"line":298,"column":7}},"line":290}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":14,"16":14,"17":14,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1},"f":{"0":1,"1":14,"2":14,"3":14,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1},"b":{},"inputSourceMap":{"version":3,"sources":["order.js"],"names":["chai","should","use","chaiDateString","chaiHttp","describe","done","beforeEach","Order","deleteMany","err","User","it","dummyUser","save","then","u","user","_id","o","request","server","get","end","res","have","status","body","be","a","property","eql","data","length","logError","message","dummyProduct","Product","p","currentOrders","send","product_id","toString","previousOrders","put"],"mappings":"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","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\","sourcesContent":["import chai, { expect } from 'chai'\r\nimport chaiHttp from 'chai-http'\r\nimport server from '../../server'\r\nimport Order from '../../models/order'\r\nimport chaiDateString from 'chai-date-string'\r\nimport User from '../../models/user'\r\nimport Product from '../../models/product'\r\nimport { dummyUser, dummyProduct } from '../configData'\r\n\r\n// Enable Chai Config when testing\r\nchai.should()\r\nchai.use(chaiDateString)\r\nchai.use(chaiHttp)\r\n// TODO\r\n// ADD MORGAN LOGS\r\n\r\ndescribe('Orders', (done) => {\r\n    beforeEach((done) => {\r\n        Order.deleteMany({}, (err) => {\r\n            User.deleteMany({}, (err) => {\r\n                done()\r\n            })\r\n        })        \r\n    })\r\n\r\n    // GET All Current Orders\r\n    describe('/GET All Current Orders', () => {\r\n        it('it should get all current orders of user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                new Order({\r\n                    user: u._id\r\n                })\r\n                .save().then((o) => {\r\n                    chai.request(server)\r\n                    .get(`/orders/${o.user}`)\r\n                    .end((err, res) => {\r\n                        res.should.have.status(200)\r\n                        res.body.should.be.a('object')\r\n                        res.body.should.have.property('errors').eql(false)\r\n                        res.body.should.have.property('data').be.a('array')\r\n                        res.body.data.should.have.length(0)\r\n                        done()\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .get(`/order/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // GET Current Order\r\n    describe('/GET Current Order', () => {\r\n        it('it should get current order of a user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    new Order({\r\n                        user: u._id,\r\n                        currentOrders: [p._id]\r\n                    }).save().then((o) => {\r\n                        chai.request(server)\r\n                        .get(`/order/${o.user}`)\r\n                        .send({ product_id: p._id })\r\n                        .end((err, res) => {\r\n                            res.should.have.status(200)\r\n                            res.body.should.be.a('object')\r\n                            res.body.should.have.property('errors').eql(false)\r\n                            res.body.should.have.property('message').eql('OK')\r\n                            res.body.should.have.property('data').be.a('array')\r\n                            res.body.data.should.have.length(1)\r\n                            res.body.data[0].should.have.property('_id').eql(p._id.toString())\r\n                            done()\r\n                        })\r\n                    }) \r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .get(`/orders/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // GET Previous Orders\r\n    describe('/GET Previous Orders', () => {\r\n        it('it should get previous orders of a user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    new Order({\r\n                        user: u._id,\r\n                        previousOrders: [p._id]\r\n                    }).save().then((o) => {\r\n                        chai.request(server)\r\n                        .get(`/past-orders/${o.user}`)\r\n                        .send({ product_id: p._id })\r\n                        .end((err, res) => {\r\n                            res.should.have.status(200)\r\n                            res.body.should.be.a('object')\r\n                            res.body.should.have.property('errors').eql(false)\r\n                            res.body.should.have.property('message').eql('OK')\r\n                            res.body.should.have.property('data').be.a('array')\r\n                            res.body.data.should.have.length(1)\r\n                            res.body.data[0].should.have.property('_id').eql(p._id.toString())\r\n                            done()\r\n                        })\r\n                    }) \r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .get(`/past-orders/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // PUT Update Previous Orders\r\n    describe('/PUT Previous Orders', () => {\r\n        it('it should update previous orders of a user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    new Order({\r\n                        user: u._id,\r\n                    }).save().then((o) => {\r\n                        chai.request(server)\r\n                        .put(`/past-orders/${o.user}`)\r\n                        .send({ product_id: p._id })\r\n                        .end((err, res) => {\r\n                            res.should.have.status(200)\r\n                            res.body.should.be.a('object')\r\n                            res.body.should.have.property('errors').eql(false)\r\n                            res.body.should.have.property('message').eql('OK')\r\n                            res.body.should.have.property('data').be.a('array')\r\n                            res.body.data.should.have.length(1)\r\n                            res.body.data[0].should.have.property('_id').eql(p._id.toString())\r\n                            done()\r\n                        })\r\n                    }) \r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .put(`/past-orders/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // PUT Update Current Orders\r\n    describe('/PUT Current Orders', () => {\r\n        it('it should update current orders of a user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    new Order({\r\n                        user: u._id,\r\n                    }).save().then((o) => {\r\n                        chai.request(server)\r\n                        .put(`/orders/${o.user}`)\r\n                        .send({ product_id: p._id })\r\n                        .end((err, res) => {\r\n                            res.should.have.status(200)\r\n                            res.body.should.be.a('object')\r\n                            res.body.should.have.property('errors').eql(false)\r\n                            res.body.should.have.property('message').eql('OK')\r\n                            res.body.should.have.property('data').be.a('array')\r\n                            res.body.data.should.have.length(1)\r\n                            res.body.data[0].should.have.property('_id').eql(p._id.toString())\r\n                            done()\r\n                        })\r\n                    }) \r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .put(`/orders/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // DELETE Delete Current Orders\r\n    describe('/Delete Current Orders', () => {\r\n        it('it should Delete current orders of a user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    new Order({\r\n                        user: u._id,\r\n                        currentOrders: [p._id]\r\n                    }).save().then((o) => {\r\n                        chai.request(server)\r\n                        .delete(`/orders/${u._id}`)\r\n                        .send({ product_id: p._id })\r\n                        .end((err, res) => {\r\n                            res.should.have.status(200)\r\n                            res.body.should.be.a('object')\r\n                            res.body.should.have.property('errors').eql(false)\r\n                            res.body.should.have.property('message').eql('OK')\r\n                            res.body.should.have.property('data').be.a('array')\r\n                            res.body.data.should.have.length(0)\r\n                            done()\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .delete(`/orders/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // DELETE Delete Previous Orders\r\n    describe('/Delete Previous Orders', () => {\r\n        it('it should Delete previous orders of a user', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    new Order({\r\n                        user: u._id,\r\n                        previousOrders: [p._id]\r\n                    }).save().then((o) => {\r\n                        chai.request(server)\r\n                        .delete(`/past-orders/${o.user}`)\r\n                        .send({ product_id: p._id })\r\n                        .end((err, res) => {\r\n                            res.should.have.status(200)\r\n                            res.body.should.be.a('object')\r\n                            res.body.should.have.property('errors').eql(false)\r\n                            res.body.should.have.property('message').eql('OK')\r\n                            res.body.should.have.property('data').be.a('array')\r\n                            res.body.data.should.have.length(0)\r\n                            done()\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has incorrect user id', (done) => {\r\n            chai.request(server)\r\n                .delete(`/past-orders/gibberish`)\r\n                .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('logError')\r\n                expect(res.body.logError).eql('Error: Argument passed in must be a single String of 12 bytes or a string of 24 hex characters')\r\n                expect(res.body.message).eql('User id in request is incorrect - gibberish')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d5b2ca3384c08df1c4398fa298c64d1871dd7f1","contentHash":"be1995e2b5d9b8ea6ac3f25d90bd8e410356abbaabf4115501599d1eb4c35064"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\server.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\server.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":15},"end":{"line":10,"column":57}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":16},"end":{"line":14,"column":59}},"6":{"start":{"line":16,"column":25},"end":{"line":16,"column":91}},"7":{"start":{"line":18,"column":22},"end":{"line":18,"column":85}},"8":{"start":{"line":20,"column":23},"end":{"line":20,"column":87}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}},"10":{"start":{"line":29,"column":10},"end":{"line":29,"column":36}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}},"12":{"start":{"line":33,"column":0},"end":{"line":42,"column":3}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":40}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":67}},"15":{"start":{"line":45,"column":0},"end":{"line":52,"column":3}},"16":{"start":{"line":46,"column":2},"end":{"line":51,"column":5}},"17":{"start":{"line":54,"column":0},"end":{"line":54,"column":123}},"18":{"start":{"line":55,"column":0},"end":{"line":55,"column":185}},"19":{"start":{"line":57,"column":0},"end":{"line":57,"column":108}},"20":{"start":{"line":58,"column":0},"end":{"line":58,"column":161}},"21":{"start":{"line":60,"column":0},"end":{"line":60,"column":192}},"22":{"start":{"line":61,"column":0},"end":{"line":61,"column":71}},"23":{"start":{"line":62,"column":0},"end":{"line":62,"column":200}},"24":{"start":{"line":64,"column":0},"end":{"line":66,"column":3}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":63}},"26":{"start":{"line":67,"column":15},"end":{"line":67,"column":18}},"27":{"start":{"line":68,"column":0},"end":{"line":68,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":38,"column":8},"end":{"line":38,"column":9}},"loc":{"start":{"line":38,"column":20},"end":{"line":40,"column":1}},"line":38},"1":{"name":"(anonymous_1)","decl":{"start":{"line":40,"column":12},"end":{"line":40,"column":13}},"loc":{"start":{"line":40,"column":29},"end":{"line":42,"column":1}},"line":40},"2":{"name":"(anonymous_2)","decl":{"start":{"line":45,"column":14},"end":{"line":45,"column":15}},"loc":{"start":{"line":45,"column":34},"end":{"line":52,"column":1}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":64,"column":29},"end":{"line":64,"column":30}},"loc":{"start":{"line":64,"column":41},"end":{"line":66,"column":1}},"line":64}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1},"f":{"0":1,"1":0,"2":1,"3":1},"b":{},"inputSourceMap":{"version":3,"sources":["server.js"],"names":["dotEnv","config","app","use","express","json","mongoose","connect","process","env","NODE_ENV","useNewUrlParser","useUnifiedTopology","useFindAndModify","useCreateIndex","then","console","log","error","get","req","res","status","send","message","errors","products","users","route","productController","getAllProducts","post","createProduct","getProduct","put","updateProduct","deleteProduct","userController","getAllUsers","createUser","getUser","updateUser","deleteUser","orderController","getCurrentOrders","updateCurrentOrders","deleteCurrentOrders","getOrder","getPreviousOrders","updatePreviousOrders","deletePreviousOrders","listen","PORT"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAQA;;AACA;;AACA;;AATA;AACA;AAEA;AACAA,mBAAOC,MAAP,G,CAEA;;;AAKA;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CAEA;;AACAC,qBAASC,OAAT,0CAAmDC,OAAO,CAACC,GAAR,CAAYC,QAA/D,GAA2E;AACvEC,EAAAA,eAAe,EAAE,IADsD;AAEvEC,EAAAA,kBAAkB,EAAE,IAFmD;AAGvEC,EAAAA,gBAAgB,EAAE,KAHqD;AAIvEC,EAAAA,cAAc,EAAE;AAJuD,CAA3E,EAMKC,IANL,CAMU;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAN;AAAA,CANV,WAOW,UAACC,KAAD;AAAA,SAAWF,OAAO,CAACC,GAAR,uCAA2CC,KAA3C,EAAX;AAAA,CAPX,E,CASA;;;AACAhB,GAAG,CAACiB,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC7CC,IAAAA,OAAO,EAAE,aADoC;AAE7CC,IAAAA,MAAM,EAAE,KAFqC;AAG7CC,IAAAA,QAAQ,EAAE,CACN,yCADM,EAEN,4CAFM,EAGN,0DAHM,EAIN,6DAJM,EAKN,gEALM,CAHmC;AAU7CC,IAAAA,KAAK,EAAE,CACH,mCADG,EAEH,sCAFG,EAGH,oDAHG,EAIH,uDAJG,EAKH,0DALG;AAVsC,GAArB,CAAd;AAAA,CAAd,E,CAmBA;;AACAzB,GAAG,CAAC0B,KAAJ,CAAU,WAAV,EACKT,GADL,CACSU,8BAAkBC,cAD3B,EAEKC,IAFL,CAEUF,8BAAkBG,aAF5B;AAIA9B,GAAG,CAAC0B,KAAJ,CAAU,uBAAV,EACKT,GADL,CACSU,8BAAkBI,UAD3B,EAEKC,GAFL,CAESL,8BAAkBM,aAF3B,YAGYN,8BAAkBO,aAH9B,E,CAKA;;AACAlC,GAAG,CAAC0B,KAAJ,CAAU,QAAV,EACKT,GADL,CACSkB,2BAAeC,WADxB,EAEKP,IAFL,CAEUM,2BAAeE,UAFzB;AAIArC,GAAG,CAAC0B,KAAJ,CAAU,iBAAV,EACKT,GADL,CACSkB,2BAAeG,OADxB,EAEKN,GAFL,CAESG,2BAAeI,UAFxB,YAGYJ,2BAAeK,UAH3B,E,CAKA;;AACAxC,GAAG,CAAC0B,KAAJ,CAAU,kBAAV,EACKT,GADL,CACSwB,4BAAgBC,gBADzB,EAEKV,GAFL,CAESS,4BAAgBE,mBAFzB,YAGYF,4BAAgBG,mBAH5B;AAKA5C,GAAG,CAAC0B,KAAJ,CAAU,iBAAV,EACKT,GADL,CACSwB,4BAAgBI,QADzB;AAGA7C,GAAG,CAAC0B,KAAJ,CAAU,uBAAV,EACKT,GADL,CACSwB,4BAAgBK,iBADzB,EAEKd,GAFL,CAESS,4BAAgBM,oBAFzB,YAGYN,4BAAgBO,oBAH5B,E,CAKA;;AACAhD,GAAG,CAACiD,MAAJ,CAAW3C,OAAO,CAACC,GAAR,CAAY2C,IAAvB,EAA6B;AAAA,SAAMpC,OAAO,CAACC,GAAR,wBACfT,OAAO,CAACC,GAAR,CAAY2C,IADG,EAAN;AAAA,CAA7B;eAIelD,G","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\","sourcesContent":["import express from 'express'\r\nimport dotEnv from 'dotenv'\r\nimport mongoose from 'mongoose'\r\n// import pathfinderUI from 'pathfinder-ui'\r\n// Middleware\r\n\r\n// Config Setup\r\ndotEnv.config()\r\n\r\n// Controllers\r\nimport productController from './controllers/productController'\r\nimport userController from './controllers/userController'\r\nimport orderController from './controllers/orderController'\r\n\r\n// App initialization\r\nconst app = express()\r\n\r\n// Middleware Setup\r\napp.use(express.json())\r\n\r\n// DB Setup\r\nmongoose.connect(`mongodb://localhost/e_commerce_${process.env.NODE_ENV}`, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    useFindAndModify: false,\r\n    useCreateIndex: true  \r\n})\r\n    .then(() => console.log('Connected to DB'))\r\n    .catch((error) => console.log(`ERROR Connecting with DB: \\n${error}`))\r\n\r\n// Route setup -- Root path\r\napp.get('/_', (req, res) => res.status(200).send({\r\n    message: 'Route_Paths',\r\n    errors: false,\r\n    products: [\r\n        'root_path/products: Get -- all products',\r\n        'root_path/products: Post -- create Product',\r\n        'root_path/products/${id}: Get -- Get Product based on Id',\r\n        'root_path/products/${id}: Put -- Update Product based on Id',\r\n        'root_path/products/${id}: Delete -- Delete Product based on Id',\r\n    ],\r\n    users: [\r\n        'root_path/users: Get -- all Users',\r\n        'root_path/users: Post -- create User',\r\n        'root_path/users/${id}: Get -- Get User based on Id',\r\n        'root_path/users/${id}: Put -- Update User based on Id',\r\n        'root_path/users/${id}: Delete -- Delete User based on Id',\r\n    ]\r\n}))\r\n\r\n// Product Controller Routes\r\napp.route('/products')\r\n    .get(productController.getAllProducts)\r\n    .post(productController.createProduct)\r\n\r\napp.route('/products/:product_id')\r\n    .get(productController.getProduct)\r\n    .put(productController.updateProduct)\r\n    .delete(productController.deleteProduct)\r\n\r\n// User Controller\r\napp.route('/users')\r\n    .get(userController.getAllUsers)\r\n    .post(userController.createUser)\r\n\r\napp.route('/users/:user_id')\r\n    .get(userController.getUser)\r\n    .put(userController.updateUser)\r\n    .delete(userController.deleteUser)\r\n\r\n// Order Controller\r\napp.route('/orders/:user_id')\r\n    .get(orderController.getCurrentOrders)\r\n    .put(orderController.updateCurrentOrders)\r\n    .delete(orderController.deleteCurrentOrders)\r\n\r\napp.route('/order/:user_id')\r\n    .get(orderController.getOrder)\r\n\r\napp.route('/past-orders/:user_id')\r\n    .get(orderController.getPreviousOrders)\r\n    .put(orderController.updatePreviousOrders)\r\n    .delete(orderController.deletePreviousOrders)\r\n\r\n// Start server and listen on PORT mentioned\r\napp.listen(process.env.PORT, () => console.log(\r\n    `Listening on ${process.env.PORT}`\r\n))\r\n\r\nexport default app\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3a4964c36026993ab3d592a8b8b2c41546296fa9","contentHash":"f3ab7016932d914d9fd769aa9dfe98e4a5b4bcfe1a57fd572878b87a1428e1b3"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\productController.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\productController.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":80}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"5":{"start":{"line":14,"column":15},"end":{"line":14,"column":67}},"6":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"7":{"start":{"line":18,"column":0},"end":{"line":34,"column":2}},"8":{"start":{"line":19,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":20,"column":4},"end":{"line":26,"column":7}},"10":{"start":{"line":21,"column":6},"end":{"line":25,"column":9}},"11":{"start":{"line":28,"column":4},"end":{"line":32,"column":7}},"12":{"start":{"line":36,"column":0},"end":{"line":81,"column":4}},"13":{"start":{"line":37,"column":13},"end":{"line":76,"column":5}},"14":{"start":{"line":38,"column":4},"end":{"line":75,"column":32}},"15":{"start":{"line":39,"column":6},"end":{"line":74,"column":7}},"16":{"start":{"line":40,"column":8},"end":{"line":73,"column":9}},"17":{"start":{"line":42,"column":12},"end":{"line":42,"column":30}},"18":{"start":{"line":43,"column":12},"end":{"line":43,"column":30}},"19":{"start":{"line":44,"column":12},"end":{"line":50,"column":15}},"20":{"start":{"line":45,"column":14},"end":{"line":49,"column":17}},"21":{"start":{"line":53,"column":12},"end":{"line":53,"column":30}},"22":{"start":{"line":54,"column":12},"end":{"line":54,"column":18}},"23":{"start":{"line":57,"column":12},"end":{"line":57,"column":30}},"24":{"start":{"line":58,"column":12},"end":{"line":58,"column":47}},"25":{"start":{"line":59,"column":12},"end":{"line":68,"column":15}},"26":{"start":{"line":72,"column":12},"end":{"line":72,"column":35}},"27":{"start":{"line":78,"column":2},"end":{"line":80,"column":4}},"28":{"start":{"line":79,"column":4},"end":{"line":79,"column":39}},"29":{"start":{"line":83,"column":0},"end":{"line":130,"column":4}},"30":{"start":{"line":84,"column":14},"end":{"line":125,"column":5}},"31":{"start":{"line":86,"column":4},"end":{"line":124,"column":33}},"32":{"start":{"line":87,"column":6},"end":{"line":123,"column":7}},"33":{"start":{"line":88,"column":8},"end":{"line":122,"column":9}},"34":{"start":{"line":90,"column":12},"end":{"line":90,"column":31}},"35":{"start":{"line":91,"column":12},"end":{"line":91,"column":31}},"36":{"start":{"line":92,"column":12},"end":{"line":97,"column":22}},"37":{"start":{"line":100,"column":12},"end":{"line":100,"column":37}},"38":{"start":{"line":102,"column":12},"end":{"line":106,"column":15}},"39":{"start":{"line":107,"column":12},"end":{"line":107,"column":32}},"40":{"start":{"line":108,"column":12},"end":{"line":108,"column":18}},"41":{"start":{"line":111,"column":12},"end":{"line":111,"column":31}},"42":{"start":{"line":112,"column":12},"end":{"line":112,"column":49}},"43":{"start":{"line":113,"column":12},"end":{"line":117,"column":15}},"44":{"start":{"line":121,"column":12},"end":{"line":121,"column":36}},"45":{"start":{"line":127,"column":2},"end":{"line":129,"column":4}},"46":{"start":{"line":128,"column":4},"end":{"line":128,"column":40}},"47":{"start":{"line":132,"column":0},"end":{"line":203,"column":4}},"48":{"start":{"line":133,"column":14},"end":{"line":198,"column":5}},"49":{"start":{"line":135,"column":4},"end":{"line":197,"column":34}},"50":{"start":{"line":136,"column":6},"end":{"line":196,"column":7}},"51":{"start":{"line":137,"column":8},"end":{"line":195,"column":9}},"52":{"start":{"line":139,"column":12},"end":{"line":139,"column":31}},"53":{"start":{"line":141,"column":12},"end":{"line":144,"column":13}},"54":{"start":{"line":142,"column":14},"end":{"line":142,"column":33}},"55":{"start":{"line":143,"column":14},"end":{"line":143,"column":20}},"56":{"start":{"line":146,"column":12},"end":{"line":152,"column":14}},"57":{"start":{"line":155,"column":12},"end":{"line":155,"column":31}},"58":{"start":{"line":156,"column":12},"end":{"line":162,"column":15}},"59":{"start":{"line":165,"column":12},"end":{"line":165,"column":31}},"60":{"start":{"line":166,"column":12},"end":{"line":166,"column":71}},"61":{"start":{"line":169,"column":12},"end":{"line":169,"column":43}},"62":{"start":{"line":170,"column":12},"end":{"line":174,"column":15}},"63":{"start":{"line":175,"column":12},"end":{"line":175,"column":32}},"64":{"start":{"line":176,"column":12},"end":{"line":176,"column":18}},"65":{"start":{"line":179,"column":12},"end":{"line":179,"column":32}},"66":{"start":{"line":180,"column":12},"end":{"line":180,"column":49}},"67":{"start":{"line":181,"column":12},"end":{"line":190,"column":15}},"68":{"start":{"line":194,"column":12},"end":{"line":194,"column":36}},"69":{"start":{"line":200,"column":2},"end":{"line":202,"column":4}},"70":{"start":{"line":201,"column":4},"end":{"line":201,"column":40}},"71":{"start":{"line":205,"column":0},"end":{"line":248,"column":4}},"72":{"start":{"line":206,"column":14},"end":{"line":243,"column":5}},"73":{"start":{"line":207,"column":4},"end":{"line":242,"column":33}},"74":{"start":{"line":208,"column":6},"end":{"line":241,"column":7}},"75":{"start":{"line":209,"column":8},"end":{"line":240,"column":9}},"76":{"start":{"line":211,"column":12},"end":{"line":211,"column":31}},"77":{"start":{"line":212,"column":12},"end":{"line":212,"column":31}},"78":{"start":{"line":213,"column":12},"end":{"line":213,"column":80}},"79":{"start":{"line":216,"column":12},"end":{"line":219,"column":15}},"80":{"start":{"line":220,"column":12},"end":{"line":220,"column":31}},"81":{"start":{"line":221,"column":12},"end":{"line":221,"column":18}},"82":{"start":{"line":224,"column":12},"end":{"line":224,"column":31}},"83":{"start":{"line":225,"column":12},"end":{"line":225,"column":49}},"84":{"start":{"line":226,"column":12},"end":{"line":235,"column":15}},"85":{"start":{"line":239,"column":12},"end":{"line":239,"column":36}},"86":{"start":{"line":245,"column":2},"end":{"line":247,"column":4}},"87":{"start":{"line":246,"column":4},"end":{"line":246,"column":40}},"88":{"start":{"line":250,"column":15},"end":{"line":250,"column":25}},"89":{"start":{"line":251,"column":0},"end":{"line":251,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":28},"end":{"line":18,"column":29}},"loc":{"start":{"line":18,"column":48},"end":{"line":34,"column":1}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":38},"end":{"line":20,"column":39}},"loc":{"start":{"line":20,"column":58},"end":{"line":26,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":37},"end":{"line":36,"column":38}},"loc":{"start":{"line":36,"column":49},"end":{"line":81,"column":1}},"line":36},"3":{"name":"_callee","decl":{"start":{"line":37,"column":100},"end":{"line":37,"column":107}},"loc":{"start":{"line":37,"column":118},"end":{"line":76,"column":3}},"line":37},"4":{"name":"_callee$","decl":{"start":{"line":38,"column":49},"end":{"line":38,"column":57}},"loc":{"start":{"line":38,"column":68},"end":{"line":75,"column":5}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":76},"end":{"line":44,"column":77}},"loc":{"start":{"line":44,"column":95},"end":{"line":50,"column":13}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":78,"column":9},"end":{"line":78,"column":10}},"loc":{"start":{"line":78,"column":28},"end":{"line":80,"column":3}},"line":78},"7":{"name":"(anonymous_7)","decl":{"start":{"line":83,"column":40},"end":{"line":83,"column":41}},"loc":{"start":{"line":83,"column":52},"end":{"line":130,"column":1}},"line":83},"8":{"name":"_callee2","decl":{"start":{"line":84,"column":101},"end":{"line":84,"column":109}},"loc":{"start":{"line":84,"column":120},"end":{"line":125,"column":3}},"line":84},"9":{"name":"_callee2$","decl":{"start":{"line":86,"column":49},"end":{"line":86,"column":58}},"loc":{"start":{"line":86,"column":70},"end":{"line":124,"column":5}},"line":86},"10":{"name":"(anonymous_10)","decl":{"start":{"line":127,"column":9},"end":{"line":127,"column":10}},"loc":{"start":{"line":127,"column":29},"end":{"line":129,"column":3}},"line":127},"11":{"name":"(anonymous_11)","decl":{"start":{"line":132,"column":40},"end":{"line":132,"column":41}},"loc":{"start":{"line":132,"column":52},"end":{"line":203,"column":1}},"line":132},"12":{"name":"_callee3","decl":{"start":{"line":133,"column":101},"end":{"line":133,"column":109}},"loc":{"start":{"line":133,"column":120},"end":{"line":198,"column":3}},"line":133},"13":{"name":"_callee3$","decl":{"start":{"line":135,"column":49},"end":{"line":135,"column":58}},"loc":{"start":{"line":135,"column":70},"end":{"line":197,"column":5}},"line":135},"14":{"name":"(anonymous_14)","decl":{"start":{"line":200,"column":9},"end":{"line":200,"column":10}},"loc":{"start":{"line":200,"column":29},"end":{"line":202,"column":3}},"line":200},"15":{"name":"(anonymous_15)","decl":{"start":{"line":205,"column":40},"end":{"line":205,"column":41}},"loc":{"start":{"line":205,"column":52},"end":{"line":248,"column":1}},"line":205},"16":{"name":"_callee4","decl":{"start":{"line":206,"column":101},"end":{"line":206,"column":109}},"loc":{"start":{"line":206,"column":120},"end":{"line":243,"column":3}},"line":206},"17":{"name":"_callee4$","decl":{"start":{"line":207,"column":49},"end":{"line":207,"column":58}},"loc":{"start":{"line":207,"column":70},"end":{"line":242,"column":5}},"line":207},"18":{"name":"(anonymous_18)","decl":{"start":{"line":245,"column":9},"end":{"line":245,"column":10}},"loc":{"start":{"line":245,"column":29},"end":{"line":247,"column":3}},"line":245}},"branchMap":{"0":{"loc":{"start":{"line":40,"column":8},"end":{"line":73,"column":9}},"type":"switch","locations":[{"start":{"line":41,"column":10},"end":{"line":50,"column":15}},{"start":{"line":52,"column":10},"end":{"line":54,"column":18}},{"start":{"line":56,"column":10},"end":{"line":68,"column":15}},{"start":{"line":70,"column":10},"end":{"line":70,"column":17}},{"start":{"line":71,"column":10},"end":{"line":72,"column":35}}],"line":40},"1":{"loc":{"start":{"line":88,"column":8},"end":{"line":122,"column":9}},"type":"switch","locations":[{"start":{"line":89,"column":10},"end":{"line":97,"column":22}},{"start":{"line":99,"column":10},"end":{"line":108,"column":18}},{"start":{"line":110,"column":10},"end":{"line":117,"column":15}},{"start":{"line":119,"column":10},"end":{"line":119,"column":18}},{"start":{"line":120,"column":10},"end":{"line":121,"column":36}}],"line":88},"2":{"loc":{"start":{"line":137,"column":8},"end":{"line":195,"column":9}},"type":"switch","locations":[{"start":{"line":138,"column":10},"end":{"line":152,"column":14}},{"start":{"line":154,"column":10},"end":{"line":162,"column":15}},{"start":{"line":164,"column":10},"end":{"line":166,"column":71}},{"start":{"line":168,"column":10},"end":{"line":176,"column":18}},{"start":{"line":178,"column":10},"end":{"line":190,"column":15}},{"start":{"line":192,"column":10},"end":{"line":192,"column":18}},{"start":{"line":193,"column":10},"end":{"line":194,"column":36}}],"line":137},"3":{"loc":{"start":{"line":141,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":144,"column":13}},{"start":{"line":141,"column":12},"end":{"line":144,"column":13}}],"line":141},"4":{"loc":{"start":{"line":141,"column":18},"end":{"line":141,"column":76}},"type":"binary-expr","locations":[{"start":{"line":141,"column":18},"end":{"line":141,"column":32}},{"start":{"line":141,"column":36},"end":{"line":141,"column":51}},{"start":{"line":141,"column":55},"end":{"line":141,"column":76}}],"line":141},"5":{"loc":{"start":{"line":183,"column":24},"end":{"line":183,"column":95}},"type":"cond-expr","locations":[{"start":{"line":183,"column":48},"end":{"line":183,"column":69}},{"start":{"line":183,"column":72},"end":{"line":183,"column":95}}],"line":183},"6":{"loc":{"start":{"line":209,"column":8},"end":{"line":240,"column":9}},"type":"switch","locations":[{"start":{"line":210,"column":10},"end":{"line":213,"column":80}},{"start":{"line":215,"column":10},"end":{"line":221,"column":18}},{"start":{"line":223,"column":10},"end":{"line":235,"column":15}},{"start":{"line":237,"column":10},"end":{"line":237,"column":17}},{"start":{"line":238,"column":10},"end":{"line":239,"column":36}}],"line":209}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":2,"15":4,"16":5,"17":2,"18":2,"19":2,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":2,"27":1,"28":2,"29":1,"30":1,"31":2,"32":4,"33":5,"34":2,"35":2,"36":2,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":2,"45":1,"46":2,"47":1,"48":1,"49":3,"50":7,"51":10,"52":3,"53":3,"54":2,"55":2,"56":1,"57":2,"58":2,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":2,"66":2,"67":2,"68":3,"69":1,"70":3,"71":1,"72":1,"73":2,"74":4,"75":5,"76":2,"77":2,"78":2,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":2,"86":1,"87":2,"88":1,"89":1},"f":{"0":1,"1":1,"2":1,"3":2,"4":4,"5":1,"6":2,"7":1,"8":2,"9":4,"10":2,"11":1,"12":3,"13":7,"14":3,"15":1,"16":2,"17":4,"18":2},"b":{"0":[2,1,1,2,2],"1":[2,1,1,2,2],"2":[3,2,1,1,2,3,3],"3":[2,1],"4":[3,2,2],"5":[1,1],"6":[2,1,1,2,2]},"inputSourceMap":{"version":3,"sources":["productController.js"],"names":["controller","getAllProducts","req","res","Product","find","then","products","status","send","err","errors","logError","details","getProduct","findById","params","product_id","product","messageFormat","kind","value","reason","createProduct","name","body","price","description","user","save","updateProduct","findByIdAndUpdate","$set","deleteProduct","findByIdAndDelete"],"mappings":"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","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\","sourcesContent":["import Product from '../models/product'\r\n\r\nconst controller = {}\r\n\r\ncontroller.getAllProducts = (req, res) => {\r\n    try {\r\n        Product.find({}).then((products) =>\r\n            res.status(200).send({\r\n                'message': 'OK',\r\n                'data': products,\r\n                'errors': false\r\n            })\r\n        )\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err}`,\r\n            details: err.errors,\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.getProduct = async (req, res) => {\r\n    try {\r\n            await Product.findById(req.params.product_id)\r\n            .then((product) => res.status(200).send({\r\n                'data': product,\r\n                'message': 'OK',\r\n                'errors': false\r\n            })\r\n        )\r\n    } catch(err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err}`,\r\n            details: {\r\n                messageFormat: err.messageFormat,\r\n                kind: err.kind,\r\n                value: err.value,\r\n                reason: `${err.reason}`,\r\n            },\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.createProduct = async (req, res) => {\r\n    // Modify to include User id\r\n    try {\r\n        const product = await new Product({\r\n            name: req.body.name,\r\n            price: req.body.price,\r\n            description: req.body.description,\r\n            user: req.body.user,\r\n        }).save()\r\n        \r\n        // await newProduct.save()\r\n        res.status(201).send({\r\n            'message': 'Created',\r\n            'data': product,\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err}`,\r\n            details: err.errors,\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.updateProduct = async (req, res) => {\r\n    try {\r\n        if (!(req.body.name) || !(req.body.price) || !(req.body.description)) {\r\n            throw ({\r\n                logError: 'Invalid request body',\r\n                messageFormat: 'JSON',\r\n                kind: 'Request body of JSON type needed',\r\n                value: 'NA',\r\n                reason: 'Missing price, name or description fields'\r\n            })\r\n        }\r\n        await Product.findByIdAndUpdate(\r\n            req.params.product_id,\r\n            {\r\n                $set: {\r\n                    name: req.body.name,\r\n                    price: req.body.price,\r\n                    description: req.body.description\r\n                }\r\n            }\r\n        )\r\n \r\n        const updateProduct = await Product.findById(req.params.product_id)\r\n\r\n        res.status(200).send({\r\n            'message': 'Updated',\r\n            'data': updateProduct,\r\n            'errors': false\r\n        })\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: err.logError ? err.logError : `${err}`,\r\n            details: {\r\n                messageFormat: err.messageFormat,\r\n                kind: err.kind,\r\n                value: err.value,\r\n                reason: `${err.reason}`,\r\n            },\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.deleteProduct = async (req, res) => {\r\n    try {\r\n        await Product.findByIdAndDelete(req.params.product_id)\r\n        res.status(200).send({\r\n            'message': 'Deleted',\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err}`,\r\n            details: {\r\n                messageFormat: err.messageFormat,\r\n                kind: err.kind,\r\n                value: err.value,\r\n                reason: `${err.reason}`,\r\n            },\r\n        })\r\n    }\r\n}\r\n\r\nexport default controller\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80b9430665128147ebec9134c8e21ea1ab09f5e8","contentHash":"a660283b78ca2b8e918a74c7f8e46b391423235adf9ec0adc943816d0698d0fc"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\product.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\product.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":59}},"4":{"start":{"line":12,"column":13},"end":{"line":12,"column":40}},"5":{"start":{"line":13,"column":15},"end":{"line":13,"column":30}},"6":{"start":{"line":15,"column":14},"end":{"line":40,"column":3}},"7":{"start":{"line":42,"column":15},"end":{"line":42,"column":22}},"8":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["product.js"],"names":["Schema","mongoose","ObjectId","Product","model","name","type","String","required","price","Number","min","description","date","Date","now","user","ref"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AACA,IAAME,QAAQ,GAAGF,MAAM,CAACE,QAAxB;;AAEA,IAAMC,OAAO,GAAGF,qBAASG,KAAT,CAAe,SAAf,EAA0B,IAAIJ,MAAJ,CAAW;AAC7CK,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADuC;AAE7CC,EAAAA,KAAK,EAAE;AAAEH,IAAAA,IAAI,EAAEI,MAAR;AAAgBC,IAAAA,GAAG,EAAE,CAArB;AAAwBH,IAAAA,QAAQ,EAAE,IAAlC;AAAwC,eAAS;AAAjD,GAFsC;AAG7CI,EAAAA,WAAW,EAAE;AAAEN,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHgC;AAI7CK,EAAAA,IAAI,EAAE;AAAEP,IAAAA,IAAI,EAAEQ,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B,GAJuC;AAK7CC,EAAAA,IAAI,EAAE;AAAEV,IAAAA,IAAI,EAAEJ,QAAR;AAAkBe,IAAAA,GAAG,EAAE,MAAvB;AAA+BT,IAAAA,QAAQ,EAAE;AAAzC,GALuC,CAKS;;AALT,CAAX,CAA1B,CAAhB;;eASeL,O","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\","sourcesContent":["import mongoose from 'mongoose'\r\n\r\nconst Schema = mongoose.Schema\r\nconst ObjectId = Schema.ObjectId\r\n\r\nconst Product = mongoose.model('Product', new Schema({\r\n        name: { type: String, required: true },\r\n        price: { type: Number, min: 0, required: true, default: 0 },\r\n        description: { type: String, required: true },\r\n        date: { type: Date, default: Date.now },\r\n        user: { type: ObjectId, ref: 'User', required: true } // required: true\r\n    })\r\n)\r\n\r\nexport default Product\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2f94618ada6cf22752227330c5931a6a4260fae6","contentHash":"792e74e9e64ad913090e27c7b2e2b3d51c26fba7cd3222c9412043542d43a526"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\userController.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\userController.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":80}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"5":{"start":{"line":14,"column":12},"end":{"line":14,"column":61}},"6":{"start":{"line":16,"column":16},"end":{"line":16,"column":59}},"7":{"start":{"line":18,"column":17},"end":{"line":18,"column":19}},"8":{"start":{"line":19,"column":15},"end":{"line":19,"column":50}},"9":{"start":{"line":21,"column":0},"end":{"line":78,"column":4}},"10":{"start":{"line":22,"column":13},"end":{"line":73,"column":5}},"11":{"start":{"line":24,"column":4},"end":{"line":72,"column":32}},"12":{"start":{"line":25,"column":6},"end":{"line":71,"column":7}},"13":{"start":{"line":26,"column":8},"end":{"line":70,"column":9}},"14":{"start":{"line":28,"column":12},"end":{"line":28,"column":30}},"15":{"start":{"line":30,"column":12},"end":{"line":33,"column":13}},"16":{"start":{"line":31,"column":14},"end":{"line":31,"column":32}},"17":{"start":{"line":32,"column":14},"end":{"line":32,"column":20}},"18":{"start":{"line":35,"column":12},"end":{"line":38,"column":14}},"19":{"start":{"line":41,"column":12},"end":{"line":41,"column":30}},"20":{"start":{"line":42,"column":12},"end":{"line":46,"column":22}},"21":{"start":{"line":49,"column":12},"end":{"line":49,"column":36}},"22":{"start":{"line":50,"column":12},"end":{"line":54,"column":15}},"23":{"start":{"line":55,"column":12},"end":{"line":55,"column":31}},"24":{"start":{"line":56,"column":12},"end":{"line":56,"column":18}},"25":{"start":{"line":59,"column":12},"end":{"line":59,"column":30}},"26":{"start":{"line":60,"column":12},"end":{"line":60,"column":47}},"27":{"start":{"line":61,"column":12},"end":{"line":65,"column":15}},"28":{"start":{"line":69,"column":12},"end":{"line":69,"column":35}},"29":{"start":{"line":75,"column":2},"end":{"line":77,"column":4}},"30":{"start":{"line":76,"column":4},"end":{"line":76,"column":39}},"31":{"start":{"line":80,"column":0},"end":{"line":117,"column":4}},"32":{"start":{"line":81,"column":14},"end":{"line":112,"column":5}},"33":{"start":{"line":83,"column":4},"end":{"line":111,"column":33}},"34":{"start":{"line":84,"column":6},"end":{"line":110,"column":7}},"35":{"start":{"line":85,"column":8},"end":{"line":109,"column":9}},"36":{"start":{"line":87,"column":12},"end":{"line":87,"column":31}},"37":{"start":{"line":88,"column":12},"end":{"line":88,"column":31}},"38":{"start":{"line":89,"column":12},"end":{"line":89,"column":65}},"39":{"start":{"line":92,"column":12},"end":{"line":92,"column":34}},"40":{"start":{"line":93,"column":12},"end":{"line":97,"column":15}},"41":{"start":{"line":98,"column":12},"end":{"line":98,"column":32}},"42":{"start":{"line":99,"column":12},"end":{"line":99,"column":18}},"43":{"start":{"line":102,"column":12},"end":{"line":102,"column":31}},"44":{"start":{"line":103,"column":12},"end":{"line":103,"column":49}},"45":{"start":{"line":104,"column":12},"end":{"line":104,"column":54}},"46":{"start":{"line":108,"column":12},"end":{"line":108,"column":36}},"47":{"start":{"line":114,"column":2},"end":{"line":116,"column":4}},"48":{"start":{"line":115,"column":4},"end":{"line":115,"column":40}},"49":{"start":{"line":119,"column":0},"end":{"line":156,"column":4}},"50":{"start":{"line":120,"column":14},"end":{"line":151,"column":5}},"51":{"start":{"line":122,"column":4},"end":{"line":150,"column":33}},"52":{"start":{"line":123,"column":6},"end":{"line":149,"column":7}},"53":{"start":{"line":124,"column":8},"end":{"line":148,"column":9}},"54":{"start":{"line":126,"column":12},"end":{"line":126,"column":31}},"55":{"start":{"line":127,"column":12},"end":{"line":127,"column":31}},"56":{"start":{"line":128,"column":12},"end":{"line":128,"column":45}},"57":{"start":{"line":131,"column":12},"end":{"line":131,"column":35}},"58":{"start":{"line":132,"column":12},"end":{"line":136,"column":15}},"59":{"start":{"line":137,"column":12},"end":{"line":137,"column":32}},"60":{"start":{"line":138,"column":12},"end":{"line":138,"column":18}},"61":{"start":{"line":141,"column":12},"end":{"line":141,"column":31}},"62":{"start":{"line":142,"column":12},"end":{"line":142,"column":49}},"63":{"start":{"line":143,"column":12},"end":{"line":143,"column":54}},"64":{"start":{"line":147,"column":12},"end":{"line":147,"column":36}},"65":{"start":{"line":153,"column":2},"end":{"line":155,"column":4}},"66":{"start":{"line":154,"column":4},"end":{"line":154,"column":40}},"67":{"start":{"line":158,"column":0},"end":{"line":205,"column":4}},"68":{"start":{"line":159,"column":14},"end":{"line":200,"column":5}},"69":{"start":{"line":161,"column":4},"end":{"line":199,"column":33}},"70":{"start":{"line":162,"column":6},"end":{"line":198,"column":7}},"71":{"start":{"line":163,"column":8},"end":{"line":197,"column":9}},"72":{"start":{"line":165,"column":12},"end":{"line":165,"column":31}},"73":{"start":{"line":166,"column":12},"end":{"line":166,"column":31}},"74":{"start":{"line":167,"column":12},"end":{"line":173,"column":15}},"75":{"start":{"line":176,"column":12},"end":{"line":176,"column":31}},"76":{"start":{"line":177,"column":12},"end":{"line":177,"column":65}},"77":{"start":{"line":180,"column":12},"end":{"line":180,"column":40}},"78":{"start":{"line":181,"column":12},"end":{"line":185,"column":15}},"79":{"start":{"line":186,"column":12},"end":{"line":186,"column":32}},"80":{"start":{"line":187,"column":12},"end":{"line":187,"column":18}},"81":{"start":{"line":190,"column":12},"end":{"line":190,"column":31}},"82":{"start":{"line":191,"column":12},"end":{"line":191,"column":49}},"83":{"start":{"line":192,"column":12},"end":{"line":192,"column":54}},"84":{"start":{"line":196,"column":12},"end":{"line":196,"column":36}},"85":{"start":{"line":202,"column":2},"end":{"line":204,"column":4}},"86":{"start":{"line":203,"column":4},"end":{"line":203,"column":40}},"87":{"start":{"line":207,"column":0},"end":{"line":245,"column":4}},"88":{"start":{"line":208,"column":14},"end":{"line":240,"column":5}},"89":{"start":{"line":209,"column":4},"end":{"line":239,"column":33}},"90":{"start":{"line":210,"column":6},"end":{"line":238,"column":7}},"91":{"start":{"line":211,"column":8},"end":{"line":237,"column":9}},"92":{"start":{"line":213,"column":12},"end":{"line":213,"column":31}},"93":{"start":{"line":214,"column":12},"end":{"line":214,"column":31}},"94":{"start":{"line":215,"column":12},"end":{"line":215,"column":88}},"95":{"start":{"line":218,"column":12},"end":{"line":221,"column":15}},"96":{"start":{"line":222,"column":12},"end":{"line":222,"column":31}},"97":{"start":{"line":223,"column":12},"end":{"line":223,"column":18}},"98":{"start":{"line":226,"column":12},"end":{"line":226,"column":31}},"99":{"start":{"line":227,"column":12},"end":{"line":227,"column":49}},"100":{"start":{"line":228,"column":12},"end":{"line":232,"column":15}},"101":{"start":{"line":236,"column":12},"end":{"line":236,"column":36}},"102":{"start":{"line":242,"column":2},"end":{"line":244,"column":4}},"103":{"start":{"line":243,"column":4},"end":{"line":243,"column":40}},"104":{"start":{"line":247,"column":15},"end":{"line":247,"column":25}},"105":{"start":{"line":248,"column":0},"end":{"line":248,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":37},"end":{"line":21,"column":38}},"loc":{"start":{"line":21,"column":49},"end":{"line":78,"column":1}},"line":21},"1":{"name":"_callee","decl":{"start":{"line":22,"column":100},"end":{"line":22,"column":107}},"loc":{"start":{"line":22,"column":118},"end":{"line":73,"column":3}},"line":22},"2":{"name":"_callee$","decl":{"start":{"line":24,"column":49},"end":{"line":24,"column":57}},"loc":{"start":{"line":24,"column":68},"end":{"line":72,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":75,"column":9},"end":{"line":75,"column":10}},"loc":{"start":{"line":75,"column":28},"end":{"line":77,"column":3}},"line":75},"4":{"name":"(anonymous_4)","decl":{"start":{"line":80,"column":34},"end":{"line":80,"column":35}},"loc":{"start":{"line":80,"column":46},"end":{"line":117,"column":1}},"line":80},"5":{"name":"_callee2","decl":{"start":{"line":81,"column":101},"end":{"line":81,"column":109}},"loc":{"start":{"line":81,"column":120},"end":{"line":112,"column":3}},"line":81},"6":{"name":"_callee2$","decl":{"start":{"line":83,"column":49},"end":{"line":83,"column":58}},"loc":{"start":{"line":83,"column":70},"end":{"line":111,"column":5}},"line":83},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":9},"end":{"line":114,"column":10}},"loc":{"start":{"line":114,"column":29},"end":{"line":116,"column":3}},"line":114},"8":{"name":"(anonymous_8)","decl":{"start":{"line":119,"column":38},"end":{"line":119,"column":39}},"loc":{"start":{"line":119,"column":50},"end":{"line":156,"column":1}},"line":119},"9":{"name":"_callee3","decl":{"start":{"line":120,"column":101},"end":{"line":120,"column":109}},"loc":{"start":{"line":120,"column":120},"end":{"line":151,"column":3}},"line":120},"10":{"name":"_callee3$","decl":{"start":{"line":122,"column":49},"end":{"line":122,"column":58}},"loc":{"start":{"line":122,"column":70},"end":{"line":150,"column":5}},"line":122},"11":{"name":"(anonymous_11)","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":10}},"loc":{"start":{"line":153,"column":29},"end":{"line":155,"column":3}},"line":153},"12":{"name":"(anonymous_12)","decl":{"start":{"line":158,"column":37},"end":{"line":158,"column":38}},"loc":{"start":{"line":158,"column":49},"end":{"line":205,"column":1}},"line":158},"13":{"name":"_callee4","decl":{"start":{"line":159,"column":101},"end":{"line":159,"column":109}},"loc":{"start":{"line":159,"column":120},"end":{"line":200,"column":3}},"line":159},"14":{"name":"_callee4$","decl":{"start":{"line":161,"column":49},"end":{"line":161,"column":58}},"loc":{"start":{"line":161,"column":70},"end":{"line":199,"column":5}},"line":161},"15":{"name":"(anonymous_15)","decl":{"start":{"line":202,"column":9},"end":{"line":202,"column":10}},"loc":{"start":{"line":202,"column":29},"end":{"line":204,"column":3}},"line":202},"16":{"name":"(anonymous_16)","decl":{"start":{"line":207,"column":37},"end":{"line":207,"column":38}},"loc":{"start":{"line":207,"column":49},"end":{"line":245,"column":1}},"line":207},"17":{"name":"_callee5","decl":{"start":{"line":208,"column":101},"end":{"line":208,"column":109}},"loc":{"start":{"line":208,"column":120},"end":{"line":240,"column":3}},"line":208},"18":{"name":"_callee5$","decl":{"start":{"line":209,"column":49},"end":{"line":209,"column":58}},"loc":{"start":{"line":209,"column":70},"end":{"line":239,"column":5}},"line":209},"19":{"name":"(anonymous_19)","decl":{"start":{"line":242,"column":9},"end":{"line":242,"column":10}},"loc":{"start":{"line":242,"column":30},"end":{"line":244,"column":3}},"line":242}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":70,"column":9}},"type":"switch","locations":[{"start":{"line":27,"column":10},"end":{"line":38,"column":14}},{"start":{"line":40,"column":10},"end":{"line":46,"column":22}},{"start":{"line":48,"column":10},"end":{"line":56,"column":18}},{"start":{"line":58,"column":10},"end":{"line":65,"column":15}},{"start":{"line":67,"column":10},"end":{"line":67,"column":18}},{"start":{"line":68,"column":10},"end":{"line":69,"column":35}}],"line":26},"1":{"loc":{"start":{"line":30,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":33,"column":13}},{"start":{"line":30,"column":12},"end":{"line":33,"column":13}}],"line":30},"2":{"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":77}},"type":"binary-expr","locations":[{"start":{"line":30,"column":18},"end":{"line":30,"column":36}},{"start":{"line":30,"column":40},"end":{"line":30,"column":58}},{"start":{"line":30,"column":62},"end":{"line":30,"column":77}}],"line":30},"3":{"loc":{"start":{"line":63,"column":24},"end":{"line":63,"column":99}},"type":"cond-expr","locations":[{"start":{"line":63,"column":47},"end":{"line":63,"column":67}},{"start":{"line":63,"column":70},"end":{"line":63,"column":99}}],"line":63},"4":{"loc":{"start":{"line":64,"column":23},"end":{"line":64,"column":130}},"type":"cond-expr","locations":[{"start":{"line":64,"column":45},"end":{"line":64,"column":64}},{"start":{"line":64,"column":67},"end":{"line":64,"column":130}}],"line":64},"5":{"loc":{"start":{"line":85,"column":8},"end":{"line":109,"column":9}},"type":"switch","locations":[{"start":{"line":86,"column":10},"end":{"line":89,"column":65}},{"start":{"line":91,"column":10},"end":{"line":99,"column":18}},{"start":{"line":101,"column":10},"end":{"line":104,"column":54}},{"start":{"line":106,"column":10},"end":{"line":106,"column":18}},{"start":{"line":107,"column":10},"end":{"line":108,"column":36}}],"line":85},"6":{"loc":{"start":{"line":124,"column":8},"end":{"line":148,"column":9}},"type":"switch","locations":[{"start":{"line":125,"column":10},"end":{"line":128,"column":45}},{"start":{"line":130,"column":10},"end":{"line":138,"column":18}},{"start":{"line":140,"column":10},"end":{"line":143,"column":54}},{"start":{"line":145,"column":10},"end":{"line":145,"column":18}},{"start":{"line":146,"column":10},"end":{"line":147,"column":36}}],"line":124},"7":{"loc":{"start":{"line":163,"column":8},"end":{"line":197,"column":9}},"type":"switch","locations":[{"start":{"line":164,"column":10},"end":{"line":173,"column":15}},{"start":{"line":175,"column":10},"end":{"line":177,"column":65}},{"start":{"line":179,"column":10},"end":{"line":187,"column":18}},{"start":{"line":189,"column":10},"end":{"line":192,"column":54}},{"start":{"line":194,"column":10},"end":{"line":194,"column":18}},{"start":{"line":195,"column":10},"end":{"line":196,"column":36}}],"line":163},"8":{"loc":{"start":{"line":211,"column":8},"end":{"line":237,"column":9}},"type":"switch","locations":[{"start":{"line":212,"column":10},"end":{"line":215,"column":88}},{"start":{"line":217,"column":10},"end":{"line":223,"column":18}},{"start":{"line":225,"column":10},"end":{"line":232,"column":15}},{"start":{"line":234,"column":10},"end":{"line":234,"column":17}},{"start":{"line":235,"column":10},"end":{"line":236,"column":36}}],"line":211}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":4,"13":6,"14":2,"15":2,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":2,"29":1,"30":2,"31":1,"32":1,"33":1,"34":2,"35":3,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":2,"53":3,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":0,"62":0,"63":0,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":3,"71":4,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":0,"82":0,"83":0,"84":1,"85":1,"86":1,"87":1,"88":1,"89":2,"90":4,"91":5,"92":2,"93":2,"94":2,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":2,"102":1,"103":2,"104":1,"105":1},"f":{"0":1,"1":2,"2":4,"3":2,"4":1,"5":1,"6":2,"7":1,"8":1,"9":1,"10":2,"11":1,"12":1,"13":1,"14":3,"15":1,"16":1,"17":2,"18":4,"19":2},"b":{"0":[2,1,1,1,2,2],"1":[1,1],"2":[2,1,1],"3":[1,0],"4":[1,0],"5":[1,1,0,1,1],"6":[1,1,0,1,1],"7":[1,1,1,0,1,1],"8":[2,1,1,2,2]},"inputSourceMap":{"version":3,"sources":["userController.js"],"names":["controller","ObjectId","mongoose","Types","createUser","req","res","body","username","password","email","logError","message","User","save","newUser","status","send","errors","reason","params","user_id","getUser","findById","user","getAllUsers","find","users","updateUser","findByIdAndUpdate","$set","deleteUser","findByIdAndDelete"],"mappings":"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","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\","sourcesContent":["import User from '../models/user'\r\nimport mongoose from 'mongoose'\r\nconst controller = {}\r\nconst ObjectId = mongoose.Types.ObjectId\r\n\r\ncontroller.createUser = async (req, res) => {\r\n    try {\r\n        if (!(req.body.username) || !(req.body.password) || !(req.body.email)) {\r\n            throw ({\r\n                logError: 'Invalid request body',\r\n                message: 'Missing fields -- username, password or email',\r\n            })\r\n        }\r\n        const newUser = await new User({\r\n            username: req.body.username,\r\n            password: req.body.password,\r\n            email: req.body.email\r\n        }).save()\r\n\r\n        res.status(201).send({\r\n            'message': 'Created',\r\n            'data': newUser,\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: err.logError ? err.logError : `${err.reason}`,\r\n            message: err.message ? err.message : `User id in request is incorrect - ${req.params.user_id}`,\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.getUser = async (req, res) => {\r\n    try {\r\n        const user = await User.findById(req.params.user_id)\r\n\r\n        res.status(200).send({\r\n            'message': 'OK',\r\n            'data': user,\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send(err.errors)\r\n    }\r\n}\r\n\r\ncontroller.getAllUsers = async (req, res) => {\r\n    try {\r\n        const users = await User.find({})\r\n\r\n        res.status(200).send({\r\n            'message': 'OK',\r\n            'data': users,\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send(err.errors)\r\n    }\r\n}\r\n\r\ncontroller.updateUser = async (req, res) => {\r\n    try {\r\n        await User.findByIdAndUpdate(\r\n            req.params.user_id,\r\n            {\r\n                $set: {\r\n                    username: req.body.username,\r\n                    password: req.body.password,\r\n                    email: req.body.email\r\n                }\r\n            }\r\n        )\r\n\r\n        const updateUser = await User.findById(req.params.user_id)\r\n\r\n        res.status(200).send({\r\n            'message': 'Updated',\r\n            'data': updateUser,\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send(err.errors)\r\n    }\r\n}\r\n\r\ncontroller.deleteUser = async (req, res) => {\r\n    try {\r\n        await User.findByIdAndDelete(new ObjectId(req.params.user_id))\r\n\r\n        res.status(200).send({\r\n            'message': 'Deleted',\r\n            'errors': false\r\n        })\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: err.logError,\r\n            message: `${err.message} -- Invalid user id`,\r\n        })\r\n    }\r\n}\r\n\r\nexport default controller\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2ac37dbafa45e01d8cb039b3442b37adc025c68b","contentHash":"cf9b1ac01e9c54e56329fd2a85c7e44bebcdf02309259fba183f1c100bcae1ce"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\user.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\user.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":80}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"5":{"start":{"line":14,"column":16},"end":{"line":14,"column":59}},"6":{"start":{"line":16,"column":17},"end":{"line":16,"column":47}},"7":{"start":{"line":18,"column":13},"end":{"line":18,"column":40}},"8":{"start":{"line":19,"column":15},"end":{"line":19,"column":30}},"9":{"start":{"line":21,"column":11},"end":{"line":69,"column":3}},"10":{"start":{"line":39,"column":25},"end":{"line":52,"column":11}},"11":{"start":{"line":40,"column":10},"end":{"line":51,"column":22}},"12":{"start":{"line":41,"column":12},"end":{"line":50,"column":13}},"13":{"start":{"line":42,"column":14},"end":{"line":49,"column":15}},"14":{"start":{"line":44,"column":18},"end":{"line":44,"column":109}},"15":{"start":{"line":48,"column":18},"end":{"line":48,"column":41}},"16":{"start":{"line":55,"column":10},"end":{"line":55,"column":51}},"17":{"start":{"line":58,"column":8},"end":{"line":58,"column":25}},"18":{"start":{"line":62,"column":6},"end":{"line":62,"column":39}},"19":{"start":{"line":71,"column":15},"end":{"line":71,"column":19}},"20":{"start":{"line":72,"column":0},"end":{"line":72,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":38,"column":17},"end":{"line":38,"column":18}},"loc":{"start":{"line":38,"column":29},"end":{"line":59,"column":7}},"line":38},"1":{"name":"_callee","decl":{"start":{"line":39,"column":112},"end":{"line":39,"column":119}},"loc":{"start":{"line":39,"column":127},"end":{"line":52,"column":9}},"line":39},"2":{"name":"_callee$","decl":{"start":{"line":40,"column":55},"end":{"line":40,"column":63}},"loc":{"start":{"line":40,"column":74},"end":{"line":51,"column":11}},"line":40},"3":{"name":"validator","decl":{"start":{"line":54,"column":17},"end":{"line":54,"column":26}},"loc":{"start":{"line":54,"column":31},"end":{"line":56,"column":9}},"line":54},"4":{"name":"message","decl":{"start":{"line":61,"column":22},"end":{"line":61,"column":29}},"loc":{"start":{"line":61,"column":37},"end":{"line":63,"column":5}},"line":61}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":14},"end":{"line":49,"column":15}},"type":"switch","locations":[{"start":{"line":43,"column":16},"end":{"line":44,"column":109}},{"start":{"line":46,"column":16},"end":{"line":46,"column":23}},{"start":{"line":47,"column":16},"end":{"line":48,"column":41}}],"line":42}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":15,"12":30,"13":30,"14":15,"15":15,"16":15,"17":1,"18":0,"19":1,"20":1},"f":{"0":1,"1":15,"2":30,"3":15,"4":0},"b":{"0":[15,0,15]},"inputSourceMap":{"version":3,"sources":["user.js"],"names":["Schema","mongoose","ObjectId","User","model","username","type","String","required","minLength","password","email","unique","validate","validator","EMAIL_REGEX","test","toLowerCase","message","props","date","Date","now"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AACA,IAAME,QAAQ,GAAGF,MAAM,CAACE,QAAxB;;AAEA,IAAMC,IAAI,GAAGF,qBAASG,KAAT,CAAe,MAAf,EAAuB,IAAIJ,MAAJ,CAAW;AACvCK,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE,IAA1B;AAAgCC,IAAAA,SAAS,EAAE;AAA3C,GAD6B;AAEvCC,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE,IAA1B;AAAgCC,IAAAA,SAAS,EAAE;AAA3C,GAF6B;AAGvCE,EAAAA,KAAK,EAAE;AACHL,IAAAA,IAAI,EAAEC,MADH;AACWE,IAAAA,SAAS,EAAE,CADtB;AAEHD,IAAAA,QAAQ,EAAE,IAFP;AAGHI,IAAAA,MAAM,EAAE,IAHL;AAIHC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS;AAAA,uGAAE,iBAAOH,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAiBI,uBAAYC,IAAZ,CAAiBT,MAAM,CAACI,KAAD,CAAN,CAAcM,WAAd,EAAjB,CAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAX,KAJP;AAKHC,IAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,aAAW,yBAAX;AAAA;AALN,GAHgC;AAUvCC,EAAAA,IAAI,EAAE;AAAEd,IAAAA,IAAI,EAAEe,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AAViC,CAAX,CAAvB,CAAb;;eAcenB,I","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\","sourcesContent":["import mongoose from 'mongoose'\r\nimport { EMAIL_REGEX } from '../config/constants'\r\n\r\nconst Schema = mongoose.Schema\r\nconst ObjectId = Schema.ObjectId\r\n\r\nconst User = mongoose.model('User', new Schema({\r\n        username: { type: String, required: true, minLength: 2 },\r\n        password: { type: String, required: true, minLength: 5, },\r\n        email: {\r\n            type: String, minLength: 3, \r\n            required: true,\r\n            unique: true,\r\n            validate: { validator: async (email) => EMAIL_REGEX.test(String(email).toLowerCase()) },\r\n            message: (props) => 'Email validation failed'\r\n        },\r\n        date: { type: Date, default: Date.now },\r\n    })\r\n)\r\n\r\nexport default User\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93933f625ea2aa2456594aa1f441ddbef7bd977b","contentHash":"cc7fc2eb3d78deba33d2742ce59e4c5eb4d74c8c51a7ea1baa1dd9f1527975af"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\config\\constants.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\config\\constants.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"2":{"start":{"line":7,"column":18},"end":{"line":7,"column":169}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["constants.js"],"names":["EMAIL_REGEX"],"mappings":";;;;;;AAAO,IAAMA,WAAW,GAAG,uJAApB","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\config\\","sourcesContent":["export const EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ba6bb3d6c312efb1b1b118781b222e1127ca122f","contentHash":"bd18980fcab9c93d57c800c5e60a9b9b1a47e3f955149943ba465f27a585b73f"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\orderController.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\orderController.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":19},"end":{"line":10,"column":80}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":99}},"5":{"start":{"line":14,"column":13},"end":{"line":14,"column":63}},"6":{"start":{"line":16,"column":15},"end":{"line":16,"column":67}},"7":{"start":{"line":18,"column":17},"end":{"line":18,"column":19}},"8":{"start":{"line":20,"column":0},"end":{"line":99,"column":4}},"9":{"start":{"line":21,"column":13},"end":{"line":94,"column":5}},"10":{"start":{"line":23,"column":4},"end":{"line":93,"column":34}},"11":{"start":{"line":24,"column":6},"end":{"line":92,"column":7}},"12":{"start":{"line":25,"column":8},"end":{"line":91,"column":9}},"13":{"start":{"line":27,"column":12},"end":{"line":27,"column":31}},"14":{"start":{"line":28,"column":12},"end":{"line":28,"column":31}},"15":{"start":{"line":29,"column":12},"end":{"line":31,"column":15}},"16":{"start":{"line":34,"column":12},"end":{"line":34,"column":36}},"17":{"start":{"line":35,"column":12},"end":{"line":35,"column":26}},"18":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"19":{"start":{"line":38,"column":14},"end":{"line":38,"column":33}},"20":{"start":{"line":39,"column":14},"end":{"line":39,"column":20}},"21":{"start":{"line":42,"column":12},"end":{"line":42,"column":31}},"22":{"start":{"line":43,"column":12},"end":{"line":68,"column":18}},"23":{"start":{"line":44,"column":26},"end":{"line":63,"column":17}},"24":{"start":{"line":45,"column":16},"end":{"line":62,"column":28}},"25":{"start":{"line":46,"column":18},"end":{"line":61,"column":19}},"26":{"start":{"line":47,"column":20},"end":{"line":60,"column":21}},"27":{"start":{"line":49,"column":24},"end":{"line":49,"column":47}},"28":{"start":{"line":50,"column":24},"end":{"line":50,"column":42}},"29":{"start":{"line":51,"column":24},"end":{"line":51,"column":67}},"30":{"start":{"line":54,"column":24},"end":{"line":54,"column":52}},"31":{"start":{"line":55,"column":24},"end":{"line":55,"column":106}},"32":{"start":{"line":59,"column":24},"end":{"line":59,"column":47}},"33":{"start":{"line":65,"column":14},"end":{"line":67,"column":16}},"34":{"start":{"line":66,"column":16},"end":{"line":66,"column":52}},"35":{"start":{"line":71,"column":12},"end":{"line":75,"column":15}},"36":{"start":{"line":76,"column":12},"end":{"line":76,"column":32}},"37":{"start":{"line":77,"column":12},"end":{"line":77,"column":18}},"38":{"start":{"line":80,"column":12},"end":{"line":80,"column":32}},"39":{"start":{"line":81,"column":12},"end":{"line":81,"column":49}},"40":{"start":{"line":82,"column":12},"end":{"line":86,"column":15}},"41":{"start":{"line":90,"column":12},"end":{"line":90,"column":36}},"42":{"start":{"line":96,"column":2},"end":{"line":98,"column":4}},"43":{"start":{"line":97,"column":4},"end":{"line":97,"column":39}},"44":{"start":{"line":101,"column":0},"end":{"line":180,"column":4}},"45":{"start":{"line":102,"column":14},"end":{"line":175,"column":5}},"46":{"start":{"line":104,"column":4},"end":{"line":174,"column":34}},"47":{"start":{"line":105,"column":6},"end":{"line":173,"column":7}},"48":{"start":{"line":106,"column":8},"end":{"line":172,"column":9}},"49":{"start":{"line":108,"column":12},"end":{"line":108,"column":31}},"50":{"start":{"line":109,"column":12},"end":{"line":109,"column":31}},"51":{"start":{"line":110,"column":12},"end":{"line":112,"column":15}},"52":{"start":{"line":115,"column":12},"end":{"line":115,"column":36}},"53":{"start":{"line":116,"column":12},"end":{"line":116,"column":26}},"54":{"start":{"line":118,"column":12},"end":{"line":121,"column":13}},"55":{"start":{"line":119,"column":14},"end":{"line":119,"column":33}},"56":{"start":{"line":120,"column":14},"end":{"line":120,"column":20}},"57":{"start":{"line":123,"column":12},"end":{"line":123,"column":31}},"58":{"start":{"line":124,"column":12},"end":{"line":149,"column":18}},"59":{"start":{"line":125,"column":26},"end":{"line":144,"column":17}},"60":{"start":{"line":126,"column":16},"end":{"line":143,"column":29}},"61":{"start":{"line":127,"column":18},"end":{"line":142,"column":19}},"62":{"start":{"line":128,"column":20},"end":{"line":141,"column":21}},"63":{"start":{"line":130,"column":24},"end":{"line":130,"column":48}},"64":{"start":{"line":131,"column":24},"end":{"line":131,"column":43}},"65":{"start":{"line":132,"column":24},"end":{"line":132,"column":67}},"66":{"start":{"line":135,"column":24},"end":{"line":135,"column":54}},"67":{"start":{"line":136,"column":24},"end":{"line":136,"column":110}},"68":{"start":{"line":140,"column":24},"end":{"line":140,"column":48}},"69":{"start":{"line":146,"column":14},"end":{"line":148,"column":16}},"70":{"start":{"line":147,"column":16},"end":{"line":147,"column":52}},"71":{"start":{"line":152,"column":12},"end":{"line":156,"column":15}},"72":{"start":{"line":157,"column":12},"end":{"line":157,"column":32}},"73":{"start":{"line":158,"column":12},"end":{"line":158,"column":18}},"74":{"start":{"line":161,"column":12},"end":{"line":161,"column":32}},"75":{"start":{"line":162,"column":12},"end":{"line":162,"column":49}},"76":{"start":{"line":163,"column":12},"end":{"line":167,"column":15}},"77":{"start":{"line":171,"column":12},"end":{"line":171,"column":36}},"78":{"start":{"line":177,"column":2},"end":{"line":179,"column":4}},"79":{"start":{"line":178,"column":4},"end":{"line":178,"column":40}},"80":{"start":{"line":182,"column":0},"end":{"line":242,"column":4}},"81":{"start":{"line":183,"column":14},"end":{"line":237,"column":5}},"82":{"start":{"line":185,"column":4},"end":{"line":236,"column":34}},"83":{"start":{"line":186,"column":6},"end":{"line":235,"column":7}},"84":{"start":{"line":187,"column":8},"end":{"line":234,"column":9}},"85":{"start":{"line":189,"column":12},"end":{"line":189,"column":31}},"86":{"start":{"line":190,"column":12},"end":{"line":190,"column":31}},"87":{"start":{"line":191,"column":12},"end":{"line":193,"column":15}},"88":{"start":{"line":196,"column":12},"end":{"line":196,"column":36}},"89":{"start":{"line":197,"column":12},"end":{"line":197,"column":25}},"90":{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},"91":{"start":{"line":200,"column":14},"end":{"line":200,"column":34}},"92":{"start":{"line":201,"column":14},"end":{"line":201,"column":20}},"93":{"start":{"line":204,"column":12},"end":{"line":204,"column":35}},"94":{"start":{"line":205,"column":12},"end":{"line":205,"column":31}},"95":{"start":{"line":206,"column":12},"end":{"line":206,"column":69}},"96":{"start":{"line":209,"column":12},"end":{"line":209,"column":42}},"97":{"start":{"line":211,"column":12},"end":{"line":211,"column":63}},"98":{"start":{"line":214,"column":12},"end":{"line":218,"column":15}},"99":{"start":{"line":219,"column":12},"end":{"line":219,"column":32}},"100":{"start":{"line":220,"column":12},"end":{"line":220,"column":18}},"101":{"start":{"line":223,"column":12},"end":{"line":223,"column":32}},"102":{"start":{"line":224,"column":12},"end":{"line":224,"column":49}},"103":{"start":{"line":225,"column":12},"end":{"line":229,"column":15}},"104":{"start":{"line":233,"column":12},"end":{"line":233,"column":36}},"105":{"start":{"line":239,"column":2},"end":{"line":241,"column":4}},"106":{"start":{"line":240,"column":4},"end":{"line":240,"column":40}},"107":{"start":{"line":244,"column":0},"end":{"line":337,"column":4}},"108":{"start":{"line":245,"column":14},"end":{"line":332,"column":5}},"109":{"start":{"line":247,"column":4},"end":{"line":331,"column":34}},"110":{"start":{"line":248,"column":6},"end":{"line":330,"column":7}},"111":{"start":{"line":249,"column":8},"end":{"line":329,"column":9}},"112":{"start":{"line":251,"column":12},"end":{"line":251,"column":31}},"113":{"start":{"line":252,"column":12},"end":{"line":252,"column":31}},"114":{"start":{"line":253,"column":12},"end":{"line":255,"column":15}},"115":{"start":{"line":258,"column":12},"end":{"line":258,"column":36}},"116":{"start":{"line":260,"column":12},"end":{"line":263,"column":13}},"117":{"start":{"line":261,"column":14},"end":{"line":261,"column":34}},"118":{"start":{"line":262,"column":14},"end":{"line":262,"column":20}},"119":{"start":{"line":265,"column":12},"end":{"line":265,"column":60}},"120":{"start":{"line":266,"column":12},"end":{"line":266,"column":31}},"121":{"start":{"line":267,"column":12},"end":{"line":267,"column":33}},"122":{"start":{"line":270,"column":12},"end":{"line":270,"column":32}},"123":{"start":{"line":271,"column":12},"end":{"line":294,"column":18}},"124":{"start":{"line":272,"column":26},"end":{"line":289,"column":17}},"125":{"start":{"line":273,"column":16},"end":{"line":288,"column":29}},"126":{"start":{"line":274,"column":18},"end":{"line":287,"column":19}},"127":{"start":{"line":275,"column":20},"end":{"line":286,"column":21}},"128":{"start":{"line":277,"column":24},"end":{"line":277,"column":43}},"129":{"start":{"line":278,"column":24},"end":{"line":278,"column":67}},"130":{"start":{"line":281,"column":24},"end":{"line":281,"column":74}},"131":{"start":{"line":285,"column":24},"end":{"line":285,"column":48}},"132":{"start":{"line":291,"column":14},"end":{"line":293,"column":16}},"133":{"start":{"line":292,"column":16},"end":{"line":292,"column":52}},"134":{"start":{"line":297,"column":12},"end":{"line":297,"column":51}},"135":{"start":{"line":298,"column":12},"end":{"line":302,"column":15}},"136":{"start":{"line":303,"column":12},"end":{"line":303,"column":32}},"137":{"start":{"line":304,"column":12},"end":{"line":304,"column":18}},"138":{"start":{"line":307,"column":12},"end":{"line":311,"column":15}},"139":{"start":{"line":314,"column":12},"end":{"line":314,"column":32}},"140":{"start":{"line":315,"column":12},"end":{"line":315,"column":18}},"141":{"start":{"line":318,"column":12},"end":{"line":318,"column":32}},"142":{"start":{"line":319,"column":12},"end":{"line":319,"column":49}},"143":{"start":{"line":320,"column":12},"end":{"line":324,"column":15}},"144":{"start":{"line":328,"column":12},"end":{"line":328,"column":36}},"145":{"start":{"line":334,"column":2},"end":{"line":336,"column":4}},"146":{"start":{"line":335,"column":4},"end":{"line":335,"column":40}},"147":{"start":{"line":339,"column":0},"end":{"line":469,"column":4}},"148":{"start":{"line":340,"column":14},"end":{"line":464,"column":5}},"149":{"start":{"line":343,"column":4},"end":{"line":463,"column":35}},"150":{"start":{"line":344,"column":6},"end":{"line":462,"column":7}},"151":{"start":{"line":345,"column":8},"end":{"line":461,"column":9}},"152":{"start":{"line":347,"column":12},"end":{"line":347,"column":32}},"153":{"start":{"line":348,"column":12},"end":{"line":348,"column":32}},"154":{"start":{"line":349,"column":12},"end":{"line":351,"column":15}},"155":{"start":{"line":354,"column":12},"end":{"line":354,"column":37}},"156":{"start":{"line":356,"column":12},"end":{"line":359,"column":13}},"157":{"start":{"line":357,"column":14},"end":{"line":357,"column":35}},"158":{"start":{"line":358,"column":14},"end":{"line":358,"column":20}},"159":{"start":{"line":361,"column":12},"end":{"line":361,"column":59}},"160":{"start":{"line":362,"column":12},"end":{"line":362,"column":32}},"161":{"start":{"line":363,"column":12},"end":{"line":363,"column":33}},"162":{"start":{"line":366,"column":12},"end":{"line":366,"column":33}},"163":{"start":{"line":367,"column":12},"end":{"line":390,"column":18}},"164":{"start":{"line":368,"column":26},"end":{"line":385,"column":17}},"165":{"start":{"line":369,"column":16},"end":{"line":384,"column":29}},"166":{"start":{"line":370,"column":18},"end":{"line":383,"column":19}},"167":{"start":{"line":371,"column":20},"end":{"line":382,"column":21}},"168":{"start":{"line":373,"column":24},"end":{"line":373,"column":43}},"169":{"start":{"line":374,"column":24},"end":{"line":374,"column":67}},"170":{"start":{"line":377,"column":24},"end":{"line":377,"column":74}},"171":{"start":{"line":381,"column":24},"end":{"line":381,"column":48}},"172":{"start":{"line":387,"column":14},"end":{"line":389,"column":16}},"173":{"start":{"line":388,"column":16},"end":{"line":388,"column":52}},"174":{"start":{"line":393,"column":12},"end":{"line":393,"column":51}},"175":{"start":{"line":394,"column":12},"end":{"line":398,"column":15}},"176":{"start":{"line":399,"column":12},"end":{"line":399,"column":33}},"177":{"start":{"line":400,"column":12},"end":{"line":400,"column":18}},"178":{"start":{"line":403,"column":12},"end":{"line":403,"column":33}},"179":{"start":{"line":404,"column":12},"end":{"line":407,"column":22}},"180":{"start":{"line":410,"column":12},"end":{"line":410,"column":39}},"181":{"start":{"line":411,"column":12},"end":{"line":411,"column":33}},"182":{"start":{"line":412,"column":12},"end":{"line":435,"column":18}},"183":{"start":{"line":413,"column":27},"end":{"line":430,"column":17}},"184":{"start":{"line":414,"column":16},"end":{"line":429,"column":29}},"185":{"start":{"line":415,"column":18},"end":{"line":428,"column":19}},"186":{"start":{"line":416,"column":20},"end":{"line":427,"column":21}},"187":{"start":{"line":418,"column":24},"end":{"line":418,"column":43}},"188":{"start":{"line":419,"column":24},"end":{"line":419,"column":67}},"189":{"start":{"line":422,"column":24},"end":{"line":422,"column":74}},"190":{"start":{"line":426,"column":24},"end":{"line":426,"column":48}},"191":{"start":{"line":432,"column":14},"end":{"line":434,"column":16}},"192":{"start":{"line":433,"column":16},"end":{"line":433,"column":53}},"193":{"start":{"line":438,"column":12},"end":{"line":438,"column":52}},"194":{"start":{"line":439,"column":12},"end":{"line":443,"column":15}},"195":{"start":{"line":446,"column":12},"end":{"line":446,"column":33}},"196":{"start":{"line":447,"column":12},"end":{"line":447,"column":18}},"197":{"start":{"line":450,"column":12},"end":{"line":450,"column":33}},"198":{"start":{"line":451,"column":12},"end":{"line":451,"column":51}},"199":{"start":{"line":452,"column":12},"end":{"line":456,"column":15}},"200":{"start":{"line":460,"column":12},"end":{"line":460,"column":37}},"201":{"start":{"line":466,"column":2},"end":{"line":468,"column":4}},"202":{"start":{"line":467,"column":4},"end":{"line":467,"column":40}},"203":{"start":{"line":471,"column":0},"end":{"line":538,"column":4}},"204":{"start":{"line":472,"column":15},"end":{"line":533,"column":5}},"205":{"start":{"line":474,"column":4},"end":{"line":532,"column":35}},"206":{"start":{"line":475,"column":6},"end":{"line":531,"column":7}},"207":{"start":{"line":476,"column":8},"end":{"line":530,"column":9}},"208":{"start":{"line":478,"column":12},"end":{"line":478,"column":32}},"209":{"start":{"line":479,"column":12},"end":{"line":479,"column":32}},"210":{"start":{"line":480,"column":12},"end":{"line":482,"column":15}},"211":{"start":{"line":485,"column":12},"end":{"line":485,"column":37}},"212":{"start":{"line":487,"column":12},"end":{"line":490,"column":13}},"213":{"start":{"line":488,"column":14},"end":{"line":488,"column":35}},"214":{"start":{"line":489,"column":14},"end":{"line":489,"column":20}},"215":{"start":{"line":492,"column":12},"end":{"line":494,"column":15}},"216":{"start":{"line":493,"column":14},"end":{"line":493,"column":67}},"217":{"start":{"line":495,"column":12},"end":{"line":495,"column":32}},"218":{"start":{"line":496,"column":12},"end":{"line":496,"column":33}},"219":{"start":{"line":499,"column":12},"end":{"line":503,"column":15}},"220":{"start":{"line":504,"column":12},"end":{"line":504,"column":33}},"221":{"start":{"line":505,"column":12},"end":{"line":505,"column":18}},"222":{"start":{"line":508,"column":12},"end":{"line":512,"column":15}},"223":{"start":{"line":515,"column":12},"end":{"line":515,"column":33}},"224":{"start":{"line":516,"column":12},"end":{"line":516,"column":18}},"225":{"start":{"line":519,"column":12},"end":{"line":519,"column":33}},"226":{"start":{"line":520,"column":12},"end":{"line":520,"column":51}},"227":{"start":{"line":521,"column":12},"end":{"line":525,"column":15}},"228":{"start":{"line":529,"column":12},"end":{"line":529,"column":37}},"229":{"start":{"line":535,"column":2},"end":{"line":537,"column":4}},"230":{"start":{"line":536,"column":4},"end":{"line":536,"column":41}},"231":{"start":{"line":540,"column":0},"end":{"line":607,"column":4}},"232":{"start":{"line":541,"column":15},"end":{"line":602,"column":5}},"233":{"start":{"line":543,"column":4},"end":{"line":601,"column":35}},"234":{"start":{"line":544,"column":6},"end":{"line":600,"column":7}},"235":{"start":{"line":545,"column":8},"end":{"line":599,"column":9}},"236":{"start":{"line":547,"column":12},"end":{"line":547,"column":32}},"237":{"start":{"line":548,"column":12},"end":{"line":548,"column":32}},"238":{"start":{"line":549,"column":12},"end":{"line":551,"column":15}},"239":{"start":{"line":554,"column":12},"end":{"line":554,"column":37}},"240":{"start":{"line":556,"column":12},"end":{"line":559,"column":13}},"241":{"start":{"line":557,"column":14},"end":{"line":557,"column":35}},"242":{"start":{"line":558,"column":14},"end":{"line":558,"column":20}},"243":{"start":{"line":561,"column":12},"end":{"line":563,"column":15}},"244":{"start":{"line":562,"column":14},"end":{"line":562,"column":67}},"245":{"start":{"line":564,"column":12},"end":{"line":564,"column":32}},"246":{"start":{"line":565,"column":12},"end":{"line":565,"column":33}},"247":{"start":{"line":568,"column":12},"end":{"line":572,"column":15}},"248":{"start":{"line":573,"column":12},"end":{"line":573,"column":33}},"249":{"start":{"line":574,"column":12},"end":{"line":574,"column":18}},"250":{"start":{"line":577,"column":12},"end":{"line":581,"column":15}},"251":{"start":{"line":584,"column":12},"end":{"line":584,"column":33}},"252":{"start":{"line":585,"column":12},"end":{"line":585,"column":18}},"253":{"start":{"line":588,"column":12},"end":{"line":588,"column":33}},"254":{"start":{"line":589,"column":12},"end":{"line":589,"column":51}},"255":{"start":{"line":590,"column":12},"end":{"line":594,"column":15}},"256":{"start":{"line":598,"column":12},"end":{"line":598,"column":37}},"257":{"start":{"line":604,"column":2},"end":{"line":606,"column":4}},"258":{"start":{"line":605,"column":4},"end":{"line":605,"column":41}},"259":{"start":{"line":609,"column":15},"end":{"line":609,"column":25}},"260":{"start":{"line":610,"column":0},"end":{"line":610,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":43},"end":{"line":20,"column":44}},"loc":{"start":{"line":20,"column":55},"end":{"line":99,"column":1}},"line":20},"1":{"name":"_callee2","decl":{"start":{"line":21,"column":100},"end":{"line":21,"column":108}},"loc":{"start":{"line":21,"column":119},"end":{"line":94,"column":3}},"line":21},"2":{"name":"_callee2$","decl":{"start":{"line":23,"column":49},"end":{"line":23,"column":58}},"loc":{"start":{"line":23,"column":70},"end":{"line":93,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":70},"end":{"line":43,"column":71}},"loc":{"start":{"line":43,"column":82},"end":{"line":68,"column":13}},"line":43},"4":{"name":"_callee","decl":{"start":{"line":44,"column":113},"end":{"line":44,"column":120}},"loc":{"start":{"line":44,"column":128},"end":{"line":63,"column":15}},"line":44},"5":{"name":"_callee$","decl":{"start":{"line":45,"column":61},"end":{"line":45,"column":69}},"loc":{"start":{"line":45,"column":80},"end":{"line":62,"column":17}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":65,"column":21},"end":{"line":65,"column":22}},"loc":{"start":{"line":65,"column":36},"end":{"line":67,"column":15}},"line":65},"7":{"name":"(anonymous_7)","decl":{"start":{"line":96,"column":9},"end":{"line":96,"column":10}},"loc":{"start":{"line":96,"column":28},"end":{"line":98,"column":3}},"line":96},"8":{"name":"(anonymous_8)","decl":{"start":{"line":101,"column":44},"end":{"line":101,"column":45}},"loc":{"start":{"line":101,"column":56},"end":{"line":180,"column":1}},"line":101},"9":{"name":"_callee4","decl":{"start":{"line":102,"column":101},"end":{"line":102,"column":109}},"loc":{"start":{"line":102,"column":120},"end":{"line":175,"column":3}},"line":102},"10":{"name":"_callee4$","decl":{"start":{"line":104,"column":49},"end":{"line":104,"column":58}},"loc":{"start":{"line":104,"column":70},"end":{"line":174,"column":5}},"line":104},"11":{"name":"(anonymous_11)","decl":{"start":{"line":124,"column":71},"end":{"line":124,"column":72}},"loc":{"start":{"line":124,"column":83},"end":{"line":149,"column":13}},"line":124},"12":{"name":"_callee3","decl":{"start":{"line":125,"column":113},"end":{"line":125,"column":121}},"loc":{"start":{"line":125,"column":129},"end":{"line":144,"column":15}},"line":125},"13":{"name":"_callee3$","decl":{"start":{"line":126,"column":61},"end":{"line":126,"column":70}},"loc":{"start":{"line":126,"column":82},"end":{"line":143,"column":17}},"line":126},"14":{"name":"(anonymous_14)","decl":{"start":{"line":146,"column":21},"end":{"line":146,"column":22}},"loc":{"start":{"line":146,"column":36},"end":{"line":148,"column":15}},"line":146},"15":{"name":"(anonymous_15)","decl":{"start":{"line":177,"column":9},"end":{"line":177,"column":10}},"loc":{"start":{"line":177,"column":29},"end":{"line":179,"column":3}},"line":177},"16":{"name":"(anonymous_16)","decl":{"start":{"line":182,"column":35},"end":{"line":182,"column":36}},"loc":{"start":{"line":182,"column":47},"end":{"line":242,"column":1}},"line":182},"17":{"name":"_callee5","decl":{"start":{"line":183,"column":101},"end":{"line":183,"column":109}},"loc":{"start":{"line":183,"column":120},"end":{"line":237,"column":3}},"line":183},"18":{"name":"_callee5$","decl":{"start":{"line":185,"column":49},"end":{"line":185,"column":58}},"loc":{"start":{"line":185,"column":70},"end":{"line":236,"column":5}},"line":185},"19":{"name":"(anonymous_19)","decl":{"start":{"line":239,"column":9},"end":{"line":239,"column":10}},"loc":{"start":{"line":239,"column":29},"end":{"line":241,"column":3}},"line":239},"20":{"name":"(anonymous_20)","decl":{"start":{"line":244,"column":47},"end":{"line":244,"column":48}},"loc":{"start":{"line":244,"column":59},"end":{"line":337,"column":1}},"line":244},"21":{"name":"_callee7","decl":{"start":{"line":245,"column":101},"end":{"line":245,"column":109}},"loc":{"start":{"line":245,"column":120},"end":{"line":332,"column":3}},"line":245},"22":{"name":"_callee7$","decl":{"start":{"line":247,"column":49},"end":{"line":247,"column":58}},"loc":{"start":{"line":247,"column":70},"end":{"line":331,"column":5}},"line":247},"23":{"name":"(anonymous_23)","decl":{"start":{"line":271,"column":71},"end":{"line":271,"column":72}},"loc":{"start":{"line":271,"column":83},"end":{"line":294,"column":13}},"line":271},"24":{"name":"_callee6","decl":{"start":{"line":272,"column":113},"end":{"line":272,"column":121}},"loc":{"start":{"line":272,"column":125},"end":{"line":289,"column":15}},"line":272},"25":{"name":"_callee6$","decl":{"start":{"line":273,"column":61},"end":{"line":273,"column":70}},"loc":{"start":{"line":273,"column":82},"end":{"line":288,"column":17}},"line":273},"26":{"name":"(anonymous_26)","decl":{"start":{"line":291,"column":21},"end":{"line":291,"column":22}},"loc":{"start":{"line":291,"column":37},"end":{"line":293,"column":15}},"line":291},"27":{"name":"(anonymous_27)","decl":{"start":{"line":334,"column":9},"end":{"line":334,"column":10}},"loc":{"start":{"line":334,"column":30},"end":{"line":336,"column":3}},"line":334},"28":{"name":"(anonymous_28)","decl":{"start":{"line":339,"column":46},"end":{"line":339,"column":47}},"loc":{"start":{"line":339,"column":58},"end":{"line":469,"column":1}},"line":339},"29":{"name":"_callee10","decl":{"start":{"line":340,"column":101},"end":{"line":340,"column":110}},"loc":{"start":{"line":340,"column":121},"end":{"line":464,"column":3}},"line":340},"30":{"name":"_callee10$","decl":{"start":{"line":343,"column":49},"end":{"line":343,"column":59}},"loc":{"start":{"line":343,"column":72},"end":{"line":463,"column":5}},"line":343},"31":{"name":"(anonymous_31)","decl":{"start":{"line":367,"column":70},"end":{"line":367,"column":71}},"loc":{"start":{"line":367,"column":82},"end":{"line":390,"column":13}},"line":367},"32":{"name":"_callee8","decl":{"start":{"line":368,"column":113},"end":{"line":368,"column":121}},"loc":{"start":{"line":368,"column":125},"end":{"line":385,"column":15}},"line":368},"33":{"name":"_callee8$","decl":{"start":{"line":369,"column":61},"end":{"line":369,"column":70}},"loc":{"start":{"line":369,"column":82},"end":{"line":384,"column":17}},"line":369},"34":{"name":"(anonymous_34)","decl":{"start":{"line":387,"column":21},"end":{"line":387,"column":22}},"loc":{"start":{"line":387,"column":37},"end":{"line":389,"column":15}},"line":387},"35":{"name":"(anonymous_35)","decl":{"start":{"line":412,"column":72},"end":{"line":412,"column":73}},"loc":{"start":{"line":412,"column":84},"end":{"line":435,"column":13}},"line":412},"36":{"name":"_callee9","decl":{"start":{"line":413,"column":114},"end":{"line":413,"column":122}},"loc":{"start":{"line":413,"column":126},"end":{"line":430,"column":15}},"line":413},"37":{"name":"_callee9$","decl":{"start":{"line":414,"column":61},"end":{"line":414,"column":70}},"loc":{"start":{"line":414,"column":82},"end":{"line":429,"column":17}},"line":414},"38":{"name":"(anonymous_38)","decl":{"start":{"line":432,"column":21},"end":{"line":432,"column":22}},"loc":{"start":{"line":432,"column":37},"end":{"line":434,"column":15}},"line":432},"39":{"name":"(anonymous_39)","decl":{"start":{"line":466,"column":9},"end":{"line":466,"column":10}},"loc":{"start":{"line":466,"column":31},"end":{"line":468,"column":3}},"line":466},"40":{"name":"(anonymous_40)","decl":{"start":{"line":471,"column":47},"end":{"line":471,"column":48}},"loc":{"start":{"line":471,"column":59},"end":{"line":538,"column":1}},"line":471},"41":{"name":"_callee11","decl":{"start":{"line":472,"column":102},"end":{"line":472,"column":111}},"loc":{"start":{"line":472,"column":122},"end":{"line":533,"column":3}},"line":472},"42":{"name":"_callee11$","decl":{"start":{"line":474,"column":49},"end":{"line":474,"column":59}},"loc":{"start":{"line":474,"column":72},"end":{"line":532,"column":5}},"line":474},"43":{"name":"(anonymous_43)","decl":{"start":{"line":492,"column":65},"end":{"line":492,"column":66}},"loc":{"start":{"line":492,"column":87},"end":{"line":494,"column":13}},"line":492},"44":{"name":"(anonymous_44)","decl":{"start":{"line":535,"column":9},"end":{"line":535,"column":10}},"loc":{"start":{"line":535,"column":31},"end":{"line":537,"column":3}},"line":535},"45":{"name":"(anonymous_45)","decl":{"start":{"line":540,"column":46},"end":{"line":540,"column":47}},"loc":{"start":{"line":540,"column":58},"end":{"line":607,"column":1}},"line":540},"46":{"name":"_callee12","decl":{"start":{"line":541,"column":102},"end":{"line":541,"column":111}},"loc":{"start":{"line":541,"column":122},"end":{"line":602,"column":3}},"line":541},"47":{"name":"_callee12$","decl":{"start":{"line":543,"column":49},"end":{"line":543,"column":59}},"loc":{"start":{"line":543,"column":72},"end":{"line":601,"column":5}},"line":543},"48":{"name":"(anonymous_48)","decl":{"start":{"line":561,"column":63},"end":{"line":561,"column":64}},"loc":{"start":{"line":561,"column":85},"end":{"line":563,"column":13}},"line":561},"49":{"name":"(anonymous_49)","decl":{"start":{"line":604,"column":9},"end":{"line":604,"column":10}},"loc":{"start":{"line":604,"column":31},"end":{"line":606,"column":3}},"line":604}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":8},"end":{"line":91,"column":9}},"type":"switch","locations":[{"start":{"line":26,"column":10},"end":{"line":31,"column":15}},{"start":{"line":33,"column":10},"end":{"line":68,"column":18}},{"start":{"line":70,"column":10},"end":{"line":77,"column":18}},{"start":{"line":79,"column":10},"end":{"line":86,"column":15}},{"start":{"line":88,"column":10},"end":{"line":88,"column":18}},{"start":{"line":89,"column":10},"end":{"line":90,"column":36}}],"line":25},"1":{"loc":{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":40,"column":13}},{"start":{"line":37,"column":12},"end":{"line":40,"column":13}}],"line":37},"2":{"loc":{"start":{"line":47,"column":20},"end":{"line":60,"column":21}},"type":"switch","locations":[{"start":{"line":48,"column":22},"end":{"line":51,"column":67}},{"start":{"line":53,"column":22},"end":{"line":55,"column":106}},{"start":{"line":57,"column":22},"end":{"line":57,"column":29}},{"start":{"line":58,"column":22},"end":{"line":59,"column":47}}],"line":47},"3":{"loc":{"start":{"line":106,"column":8},"end":{"line":172,"column":9}},"type":"switch","locations":[{"start":{"line":107,"column":10},"end":{"line":112,"column":15}},{"start":{"line":114,"column":10},"end":{"line":149,"column":18}},{"start":{"line":151,"column":10},"end":{"line":158,"column":18}},{"start":{"line":160,"column":10},"end":{"line":167,"column":15}},{"start":{"line":169,"column":10},"end":{"line":169,"column":18}},{"start":{"line":170,"column":10},"end":{"line":171,"column":36}}],"line":106},"4":{"loc":{"start":{"line":118,"column":12},"end":{"line":121,"column":13}},"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":121,"column":13}},{"start":{"line":118,"column":12},"end":{"line":121,"column":13}}],"line":118},"5":{"loc":{"start":{"line":128,"column":20},"end":{"line":141,"column":21}},"type":"switch","locations":[{"start":{"line":129,"column":22},"end":{"line":132,"column":67}},{"start":{"line":134,"column":22},"end":{"line":136,"column":110}},{"start":{"line":138,"column":22},"end":{"line":138,"column":29}},{"start":{"line":139,"column":22},"end":{"line":140,"column":48}}],"line":128},"6":{"loc":{"start":{"line":187,"column":8},"end":{"line":234,"column":9}},"type":"switch","locations":[{"start":{"line":188,"column":10},"end":{"line":193,"column":15}},{"start":{"line":195,"column":10},"end":{"line":206,"column":69}},{"start":{"line":208,"column":10},"end":{"line":211,"column":63}},{"start":{"line":213,"column":10},"end":{"line":220,"column":18}},{"start":{"line":222,"column":10},"end":{"line":229,"column":15}},{"start":{"line":231,"column":10},"end":{"line":231,"column":18}},{"start":{"line":232,"column":10},"end":{"line":233,"column":36}}],"line":187},"7":{"loc":{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},{"start":{"line":199,"column":12},"end":{"line":202,"column":13}}],"line":199},"8":{"loc":{"start":{"line":199,"column":18},"end":{"line":199,"column":78}},"type":"binary-expr","locations":[{"start":{"line":199,"column":18},"end":{"line":199,"column":24}},{"start":{"line":199,"column":28},"end":{"line":199,"column":78}}],"line":199},"9":{"loc":{"start":{"line":249,"column":8},"end":{"line":329,"column":9}},"type":"switch","locations":[{"start":{"line":250,"column":10},"end":{"line":255,"column":15}},{"start":{"line":257,"column":10},"end":{"line":267,"column":33}},{"start":{"line":269,"column":10},"end":{"line":294,"column":18}},{"start":{"line":296,"column":10},"end":{"line":304,"column":18}},{"start":{"line":306,"column":10},"end":{"line":311,"column":15}},{"start":{"line":313,"column":10},"end":{"line":315,"column":18}},{"start":{"line":317,"column":10},"end":{"line":324,"column":15}},{"start":{"line":326,"column":10},"end":{"line":326,"column":18}},{"start":{"line":327,"column":10},"end":{"line":328,"column":36}}],"line":249},"10":{"loc":{"start":{"line":260,"column":12},"end":{"line":263,"column":13}},"type":"if","locations":[{"start":{"line":260,"column":12},"end":{"line":263,"column":13}},{"start":{"line":260,"column":12},"end":{"line":263,"column":13}}],"line":260},"11":{"loc":{"start":{"line":275,"column":20},"end":{"line":286,"column":21}},"type":"switch","locations":[{"start":{"line":276,"column":22},"end":{"line":278,"column":67}},{"start":{"line":280,"column":22},"end":{"line":281,"column":74}},{"start":{"line":283,"column":22},"end":{"line":283,"column":29}},{"start":{"line":284,"column":22},"end":{"line":285,"column":48}}],"line":275},"12":{"loc":{"start":{"line":345,"column":8},"end":{"line":461,"column":9}},"type":"switch","locations":[{"start":{"line":346,"column":10},"end":{"line":351,"column":15}},{"start":{"line":353,"column":10},"end":{"line":363,"column":33}},{"start":{"line":365,"column":10},"end":{"line":390,"column":18}},{"start":{"line":392,"column":10},"end":{"line":400,"column":18}},{"start":{"line":402,"column":10},"end":{"line":407,"column":22}},{"start":{"line":409,"column":10},"end":{"line":435,"column":18}},{"start":{"line":437,"column":10},"end":{"line":443,"column":15}},{"start":{"line":445,"column":10},"end":{"line":447,"column":18}},{"start":{"line":449,"column":10},"end":{"line":456,"column":15}},{"start":{"line":458,"column":10},"end":{"line":458,"column":18}},{"start":{"line":459,"column":10},"end":{"line":460,"column":37}}],"line":345},"13":{"loc":{"start":{"line":356,"column":12},"end":{"line":359,"column":13}},"type":"if","locations":[{"start":{"line":356,"column":12},"end":{"line":359,"column":13}},{"start":{"line":356,"column":12},"end":{"line":359,"column":13}}],"line":356},"14":{"loc":{"start":{"line":371,"column":20},"end":{"line":382,"column":21}},"type":"switch","locations":[{"start":{"line":372,"column":22},"end":{"line":374,"column":67}},{"start":{"line":376,"column":22},"end":{"line":377,"column":74}},{"start":{"line":379,"column":22},"end":{"line":379,"column":29}},{"start":{"line":380,"column":22},"end":{"line":381,"column":48}}],"line":371},"15":{"loc":{"start":{"line":416,"column":20},"end":{"line":427,"column":21}},"type":"switch","locations":[{"start":{"line":417,"column":22},"end":{"line":419,"column":67}},{"start":{"line":421,"column":22},"end":{"line":422,"column":74}},{"start":{"line":424,"column":22},"end":{"line":424,"column":29}},{"start":{"line":425,"column":22},"end":{"line":426,"column":48}}],"line":416},"16":{"loc":{"start":{"line":476,"column":8},"end":{"line":530,"column":9}},"type":"switch","locations":[{"start":{"line":477,"column":10},"end":{"line":482,"column":15}},{"start":{"line":484,"column":10},"end":{"line":496,"column":33}},{"start":{"line":498,"column":10},"end":{"line":505,"column":18}},{"start":{"line":507,"column":10},"end":{"line":512,"column":15}},{"start":{"line":514,"column":10},"end":{"line":516,"column":18}},{"start":{"line":518,"column":10},"end":{"line":525,"column":15}},{"start":{"line":527,"column":10},"end":{"line":527,"column":18}},{"start":{"line":528,"column":10},"end":{"line":529,"column":37}}],"line":476},"17":{"loc":{"start":{"line":487,"column":12},"end":{"line":490,"column":13}},"type":"if","locations":[{"start":{"line":487,"column":12},"end":{"line":490,"column":13}},{"start":{"line":487,"column":12},"end":{"line":490,"column":13}}],"line":487},"18":{"loc":{"start":{"line":487,"column":18},"end":{"line":487,"column":79}},"type":"binary-expr","locations":[{"start":{"line":487,"column":18},"end":{"line":487,"column":24}},{"start":{"line":487,"column":28},"end":{"line":487,"column":79}}],"line":487},"19":{"loc":{"start":{"line":545,"column":8},"end":{"line":599,"column":9}},"type":"switch","locations":[{"start":{"line":546,"column":10},"end":{"line":551,"column":15}},{"start":{"line":553,"column":10},"end":{"line":565,"column":33}},{"start":{"line":567,"column":10},"end":{"line":574,"column":18}},{"start":{"line":576,"column":10},"end":{"line":581,"column":15}},{"start":{"line":583,"column":10},"end":{"line":585,"column":18}},{"start":{"line":587,"column":10},"end":{"line":594,"column":15}},{"start":{"line":596,"column":10},"end":{"line":596,"column":18}},{"start":{"line":597,"column":10},"end":{"line":598,"column":37}}],"line":545},"20":{"loc":{"start":{"line":556,"column":12},"end":{"line":559,"column":13}},"type":"if","locations":[{"start":{"line":556,"column":12},"end":{"line":559,"column":13}},{"start":{"line":556,"column":12},"end":{"line":559,"column":13}}],"line":556},"21":{"loc":{"start":{"line":556,"column":18},"end":{"line":556,"column":78}},"type":"binary-expr","locations":[{"start":{"line":556,"column":18},"end":{"line":556,"column":24}},{"start":{"line":556,"column":28},"end":{"line":556,"column":78}}],"line":556}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":5,"12":6,"13":2,"14":2,"15":2,"16":1,"17":1,"18":1,"19":0,"20":0,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":2,"42":1,"43":2,"44":1,"45":1,"46":2,"47":5,"48":6,"49":2,"50":2,"51":2,"52":1,"53":1,"54":1,"55":0,"56":0,"57":1,"58":1,"59":1,"60":1,"61":3,"62":3,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":2,"78":1,"79":2,"80":1,"81":1,"82":2,"83":5,"84":6,"85":2,"86":2,"87":2,"88":1,"89":1,"90":1,"91":0,"92":0,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":2,"105":1,"106":2,"107":1,"108":1,"109":2,"110":6,"111":8,"112":2,"113":2,"114":2,"115":1,"116":1,"117":0,"118":0,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":3,"127":3,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":0,"139":1,"140":1,"141":1,"142":1,"143":1,"144":2,"145":1,"146":2,"147":1,"148":1,"149":2,"150":6,"151":8,"152":2,"153":2,"154":2,"155":1,"156":1,"157":0,"158":0,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":3,"167":3,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":1,"196":1,"197":1,"198":1,"199":1,"200":2,"201":1,"202":2,"203":1,"204":1,"205":2,"206":5,"207":7,"208":2,"209":2,"210":2,"211":1,"212":1,"213":0,"214":0,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":0,"223":1,"224":1,"225":1,"226":1,"227":1,"228":2,"229":1,"230":2,"231":1,"232":1,"233":2,"234":5,"235":7,"236":2,"237":2,"238":2,"239":1,"240":1,"241":0,"242":0,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":0,"251":1,"252":1,"253":1,"254":1,"255":1,"256":2,"257":1,"258":2,"259":1,"260":1},"f":{"0":1,"1":2,"2":5,"3":1,"4":0,"5":0,"6":0,"7":2,"8":1,"9":2,"10":5,"11":1,"12":1,"13":3,"14":1,"15":2,"16":1,"17":2,"18":5,"19":2,"20":1,"21":2,"22":6,"23":1,"24":1,"25":3,"26":1,"27":2,"28":1,"29":2,"30":6,"31":1,"32":1,"33":3,"34":1,"35":0,"36":0,"37":0,"38":0,"39":2,"40":1,"41":2,"42":5,"43":1,"44":2,"45":1,"46":2,"47":5,"48":1,"49":2},"b":{"0":[2,1,1,1,2,2],"1":[0,1],"2":[0,0,0,0],"3":[2,1,1,1,2,2],"4":[0,1],"5":[1,1,0,1],"6":[2,1,1,1,1,2,2],"7":[0,1],"8":[1,1],"9":[2,1,1,1,0,1,1,2,2],"10":[0,1],"11":[1,1,0,1],"12":[2,1,1,1,0,0,0,1,1,2,2],"13":[0,1],"14":[1,1,0,1],"15":[0,0,0,0],"16":[2,1,1,0,1,1,2,2],"17":[0,1],"18":[1,1],"19":[2,1,1,0,1,1,2,2],"20":[0,1],"21":[1,1]},"inputSourceMap":{"version":3,"sources":["orderController.js"],"names":["controller","getCurrentOrders","req","res","Order","findOne","user","params","user_id","orders","products","Promise","all","currentOrders","map","order","Product","findById","push","status","send","message","data","errors","logError","reason","getPreviousOrders","previousOrders","getOrder","product","includes","body","product_id","updatePreviousOrders","save","p","_id","previousOrderProducts","updateCurrentOrders","currentOrderProducts","newOrder","deletePreviousOrders","filter","deleteCurrentOrders"],"mappings":"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","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\controllers\\","sourcesContent":["import Order from '../models/order'\r\nimport Product from '../models/product'\r\n\r\nconst controller = {}\r\n\r\ncontroller.getCurrentOrders = async (req, res) => {\r\n    try {\r\n        const orders = await Order.findOne({ user: req.params.user_id })\r\n        const products = []\r\n        \r\n        if (orders) {\r\n            await Promise.all(orders.currentOrders.map(async (order) => products.push(await Product.findById(order))))\r\n        }\r\n\r\n        res.status(200).send({\r\n            message: `OK`,\r\n            data: products,\r\n            errors: false\r\n        })\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.getPreviousOrders = async (req, res) => {\r\n    try {\r\n        const orders = await Order.findOne({ user: req.params.user_id })\r\n        const products = []\r\n        \r\n        if (orders) {\r\n            await Promise.all(orders.previousOrders.map(async (order) => products.push(await Product.findById(order))))\r\n        }\r\n\r\n        res.status(200).send({\r\n            'message': 'OK',\r\n            'data': products,\r\n            'errors': false\r\n        })\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.getOrder = async (req, res) => {\r\n    try {\r\n        const orders = await Order.findOne({ user: req.params.user_id })\r\n        const product = []\r\n\r\n        if (orders && orders.currentOrders.includes(req.body.product_id)) {\r\n            product.push(await Product.findById(req.body.product_id))    \r\n        }\r\n\r\n        res.status(200).send({\r\n            'message': 'OK',\r\n            'data': product,\r\n            'errors': false\r\n        })\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.updatePreviousOrders = async (req, res) => {\r\n    try {\r\n\r\n        const orders = await Order.findOne({\r\n            user: req.params.user_id\r\n        })\r\n\r\n        if (orders) {\r\n            \r\n            orders.previousOrders.push(req.body.product_id)\r\n            await orders.save()\r\n            const previousOrderProducts =  await Promise.all(orders.previousOrders.map(async (p) => await Product.findById(p._id)))\r\n\r\n            res.status(200).send({\r\n                'message': 'OK',\r\n                'data': previousOrderProducts,\r\n                'errors': false\r\n            })\r\n\r\n        } else {\r\n\r\n            res.status(400).send({\r\n                'message': `Error, user doesn't exist or no such order.`,\r\n                'data': [],\r\n                'errors': false\r\n            })\r\n\r\n        }\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.updateCurrentOrders = async (req, res) => {\r\n    try {\r\n\r\n        const orders = await Order.findOne({\r\n            user: req.params.user_id\r\n        })\r\n\r\n        if (orders) {\r\n            \r\n            orders.currentOrders.push(req.body.product_id)\r\n            await orders.save()\r\n            const currentOrderProducts =  await Promise.all(orders.currentOrders.map(async (p) => await Product.findById(p._id)))\r\n\r\n            res.status(200).send({\r\n                'message': 'OK',\r\n                'data': currentOrderProducts,\r\n                'errors': false\r\n            })\r\n\r\n        } else {\r\n            \r\n            const newOrder = await new Order({\r\n                user: req.params.user_id,\r\n                currentOrders: [ req.body.product_id ]\r\n            }).save()\r\n            const currentOrderProducts =  await Promise.all(newOrder.currentOrders.map(async (p) => await Product.findById(p._id)))\r\n\r\n            res.status(201).send({\r\n                'message': 'OK',\r\n                'data': currentOrderProducts,\r\n                'errors': false\r\n            })\r\n\r\n        }\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.deletePreviousOrders = async (req, res) => {\r\n    try {\r\n\r\n        const orders = await Order.findOne({\r\n            user: req.params.user_id\r\n        })\r\n\r\n        if (orders && orders.previousOrders.includes(req.body.product_id)) {\r\n\r\n            orders.previousOrders = orders.previousOrders.filter((product_id) => req.body.product_id !== `${product_id}`)            \r\n            await orders.save()\r\n\r\n            res.status(200).send({\r\n                'message': 'OK',\r\n                'data': orders.previousOrders,\r\n                'errors': false\r\n            })\r\n\r\n        } else {\r\n            res.status(201).send({\r\n                'message': 'No Such order placed!',\r\n                'data': [],\r\n                'errors': false\r\n            })\r\n\r\n        }\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\ncontroller.deleteCurrentOrders = async (req, res) => {\r\n    try {\r\n\r\n        const orders = await Order.findOne({\r\n            user: req.params.user_id\r\n        })\r\n\r\n        if (orders && orders.currentOrders.includes(req.body.product_id)) {\r\n\r\n            orders.currentOrders = orders.currentOrders.filter((product_id) => req.body.product_id !== `${product_id}`)\r\n            await orders.save()\r\n\r\n            res.status(200).send({\r\n                'message': 'OK',\r\n                'data': orders.currentOrders,\r\n                'errors': false\r\n            })\r\n\r\n        } else {\r\n            res.status(200).send({\r\n                'message': 'No Such order placed!',\r\n                'data': [],\r\n                'errors': false\r\n            })\r\n\r\n        }\r\n\r\n    } catch (err) {\r\n        res.status(400).send({\r\n            errors: true,\r\n            logError: `${err.reason}`,\r\n            message: `User id in request is incorrect - ${req.params.user_id}`\r\n        })\r\n    }\r\n}\r\n\r\nexport default controller\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3631183465ad087bc180c2aae32fefc792b3eef3","contentHash":"996da17a4e5e487c6d2e6c5b7520c00a4cae5b86331a100e26f015e78ee0f66b"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\order.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\order.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":59}},"4":{"start":{"line":12,"column":13},"end":{"line":12,"column":40}},"5":{"start":{"line":13,"column":15},"end":{"line":13,"column":30}},"6":{"start":{"line":15,"column":12},"end":{"line":35,"column":3}},"7":{"start":{"line":37,"column":15},"end":{"line":37,"column":20}},"8":{"start":{"line":38,"column":0},"end":{"line":38,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["order.js"],"names":["Schema","mongoose","ObjectId","Order","model","date","type","Date","now","user","ref","required","previousOrders","currentOrders"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AACA,IAAME,QAAQ,GAAGF,MAAM,CAACE,QAAxB;;AAEA,IAAMC,KAAK,GAAGF,qBAASG,KAAT,CAAe,OAAf,EAAwB,IAAIJ,MAAJ,CAAW;AACzCK,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B,GADmC;AAEzCC,EAAAA,IAAI,EAAE;AAAEH,IAAAA,IAAI,EAAEJ,QAAR;AAAkBQ,IAAAA,GAAG,EAAE,MAAvB;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAFmC;AAGzCC,EAAAA,cAAc,EAAE,CAAC;AACbN,IAAAA,IAAI,EAAEJ,QADO;AACGQ,IAAAA,GAAG,EAAE,SADR,CACkB;;AADlB,GAAD,CAHyB;AAMzCG,EAAAA,aAAa,EAAE,CAAC;AACZP,IAAAA,IAAI,EAAEJ,QADM;AACIQ,IAAAA,GAAG,EAAE,SADT,CACmB;;AADnB,GAAD;AAN0B,CAAX,CAAxB,CAAd;;eAYeP,K","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\models\\","sourcesContent":["import mongoose from 'mongoose'\r\n\r\nconst Schema = mongoose.Schema\r\nconst ObjectId = Schema.ObjectId\r\n\r\nconst Order = mongoose.model('Order', new Schema({\r\n        date: { type: Date, default: Date.now },\r\n        user: { type: ObjectId, ref: 'User', required: true },\r\n        previousOrders: [{\r\n            type: ObjectId, ref: 'Product' // default is []\r\n        }],\r\n        currentOrders: [{\r\n            type: ObjectId, ref: 'Product' // default is []\r\n        }]\r\n    })\r\n)\r\n\r\nexport default Order\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7d8cc74d921d0f86428207ce67756118c5cbd662","contentHash":"6f7161976e0bf4b8a3fdc473d45611939012c34037f32214cb5bd131599a52d6"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\product.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\product.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":14},"end":{"line":9,"column":61}},"4":{"start":{"line":11,"column":15},"end":{"line":11,"column":70}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":64}},"6":{"start":{"line":15,"column":22},"end":{"line":15,"column":73}},"7":{"start":{"line":17,"column":18},"end":{"line":17,"column":42}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"9":{"start":{"line":22,"column":13},"end":{"line":22,"column":36}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":43}},"12":{"start":{"line":29,"column":0},"end":{"line":245,"column":3}},"13":{"start":{"line":30,"column":2},"end":{"line":36,"column":5}},"14":{"start":{"line":31,"column":4},"end":{"line":35,"column":7}},"15":{"start":{"line":32,"column":6},"end":{"line":34,"column":9}},"16":{"start":{"line":33,"column":8},"end":{"line":33,"column":15}},"17":{"start":{"line":38,"column":2},"end":{"line":97,"column":5}},"18":{"start":{"line":39,"column":4},"end":{"line":58,"column":7}},"19":{"start":{"line":40,"column":6},"end":{"line":57,"column":9}},"20":{"start":{"line":41,"column":8},"end":{"line":41,"column":46}},"21":{"start":{"line":43,"column":8},"end":{"line":56,"column":11}},"22":{"start":{"line":44,"column":10},"end":{"line":44,"column":38}},"23":{"start":{"line":45,"column":10},"end":{"line":45,"column":41}},"24":{"start":{"line":46,"column":10},"end":{"line":46,"column":61}},"25":{"start":{"line":47,"column":10},"end":{"line":47,"column":48}},"26":{"start":{"line":48,"column":10},"end":{"line":48,"column":46}},"27":{"start":{"line":50,"column":10},"end":{"line":50,"column":71}},"28":{"start":{"line":51,"column":10},"end":{"line":51,"column":70}},"29":{"start":{"line":52,"column":10},"end":{"line":52,"column":72}},"30":{"start":{"line":53,"column":10},"end":{"line":53,"column":78}},"31":{"start":{"line":54,"column":10},"end":{"line":54,"column":58}},"32":{"start":{"line":55,"column":10},"end":{"line":55,"column":17}},"33":{"start":{"line":60,"column":4},"end":{"line":96,"column":7}},"34":{"start":{"line":61,"column":6},"end":{"line":95,"column":9}},"35":{"start":{"line":62,"column":8},"end":{"line":62,"column":36}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":39}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":58}},"38":{"start":{"line":65,"column":8},"end":{"line":65,"column":58}},"39":{"start":{"line":66,"column":8},"end":{"line":66,"column":68}},"40":{"start":{"line":67,"column":8},"end":{"line":67,"column":71}},"41":{"start":{"line":68,"column":8},"end":{"line":68,"column":47}},"42":{"start":{"line":69,"column":8},"end":{"line":69,"column":60}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":54}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":61}},"45":{"start":{"line":72,"column":8},"end":{"line":72,"column":54}},"46":{"start":{"line":74,"column":8},"end":{"line":74,"column":59}},"47":{"start":{"line":75,"column":8},"end":{"line":75,"column":62}},"48":{"start":{"line":76,"column":8},"end":{"line":76,"column":65}},"49":{"start":{"line":77,"column":8},"end":{"line":77,"column":59}},"50":{"start":{"line":78,"column":8},"end":{"line":78,"column":59}},"51":{"start":{"line":79,"column":8},"end":{"line":79,"column":65}},"52":{"start":{"line":81,"column":8},"end":{"line":81,"column":66}},"53":{"start":{"line":82,"column":8},"end":{"line":82,"column":69}},"54":{"start":{"line":83,"column":8},"end":{"line":83,"column":72}},"55":{"start":{"line":84,"column":8},"end":{"line":84,"column":66}},"56":{"start":{"line":85,"column":8},"end":{"line":85,"column":66}},"57":{"start":{"line":86,"column":8},"end":{"line":86,"column":72}},"58":{"start":{"line":88,"column":8},"end":{"line":88,"column":59}},"59":{"start":{"line":89,"column":8},"end":{"line":89,"column":62}},"60":{"start":{"line":90,"column":8},"end":{"line":90,"column":65}},"61":{"start":{"line":91,"column":8},"end":{"line":91,"column":59}},"62":{"start":{"line":92,"column":8},"end":{"line":92,"column":59}},"63":{"start":{"line":93,"column":8},"end":{"line":93,"column":65}},"64":{"start":{"line":94,"column":8},"end":{"line":94,"column":15}},"65":{"start":{"line":99,"column":2},"end":{"line":114,"column":5}},"66":{"start":{"line":100,"column":4},"end":{"line":109,"column":7}},"67":{"start":{"line":101,"column":6},"end":{"line":108,"column":9}},"68":{"start":{"line":102,"column":8},"end":{"line":102,"column":36}},"69":{"start":{"line":103,"column":8},"end":{"line":103,"column":59}},"70":{"start":{"line":104,"column":8},"end":{"line":104,"column":43}},"71":{"start":{"line":105,"column":8},"end":{"line":105,"column":46}},"72":{"start":{"line":106,"column":8},"end":{"line":106,"column":59}},"73":{"start":{"line":107,"column":8},"end":{"line":107,"column":15}},"74":{"start":{"line":111,"column":4},"end":{"line":113,"column":7}},"75":{"start":{"line":112,"column":6},"end":{"line":112,"column":13}},"76":{"start":{"line":116,"column":2},"end":{"line":146,"column":5}},"77":{"start":{"line":117,"column":4},"end":{"line":130,"column":7}},"78":{"start":{"line":118,"column":6},"end":{"line":129,"column":9}},"79":{"start":{"line":119,"column":8},"end":{"line":119,"column":46}},"80":{"start":{"line":120,"column":8},"end":{"line":128,"column":11}},"81":{"start":{"line":121,"column":10},"end":{"line":127,"column":13}},"82":{"start":{"line":122,"column":12},"end":{"line":122,"column":40}},"83":{"start":{"line":123,"column":12},"end":{"line":123,"column":43}},"84":{"start":{"line":124,"column":12},"end":{"line":124,"column":63}},"85":{"start":{"line":125,"column":12},"end":{"line":125,"column":70}},"86":{"start":{"line":126,"column":12},"end":{"line":126,"column":19}},"87":{"start":{"line":132,"column":4},"end":{"line":145,"column":7}},"88":{"start":{"line":133,"column":6},"end":{"line":144,"column":9}},"89":{"start":{"line":134,"column":8},"end":{"line":134,"column":36}},"90":{"start":{"line":135,"column":8},"end":{"line":135,"column":39}},"91":{"start":{"line":136,"column":8},"end":{"line":136,"column":58}},"92":{"start":{"line":137,"column":8},"end":{"line":137,"column":150}},"93":{"start":{"line":138,"column":8},"end":{"line":138,"column":51}},"94":{"start":{"line":139,"column":8},"end":{"line":139,"column":60}},"95":{"start":{"line":140,"column":8},"end":{"line":140,"column":56}},"96":{"start":{"line":141,"column":8},"end":{"line":141,"column":57}},"97":{"start":{"line":142,"column":8},"end":{"line":142,"column":58}},"98":{"start":{"line":143,"column":8},"end":{"line":143,"column":15}},"99":{"start":{"line":148,"column":2},"end":{"line":183,"column":5}},"100":{"start":{"line":149,"column":4},"end":{"line":167,"column":7}},"101":{"start":{"line":150,"column":6},"end":{"line":166,"column":9}},"102":{"start":{"line":151,"column":8},"end":{"line":165,"column":11}},"103":{"start":{"line":152,"column":10},"end":{"line":152,"column":38}},"104":{"start":{"line":153,"column":10},"end":{"line":153,"column":41}},"105":{"start":{"line":154,"column":10},"end":{"line":154,"column":61}},"106":{"start":{"line":155,"column":10},"end":{"line":155,"column":48}},"107":{"start":{"line":156,"column":10},"end":{"line":156,"column":46}},"108":{"start":{"line":158,"column":10},"end":{"line":158,"column":71}},"109":{"start":{"line":159,"column":10},"end":{"line":159,"column":70}},"110":{"start":{"line":160,"column":10},"end":{"line":160,"column":72}},"111":{"start":{"line":161,"column":10},"end":{"line":161,"column":78}},"112":{"start":{"line":162,"column":10},"end":{"line":162,"column":58}},"113":{"start":{"line":163,"column":10},"end":{"line":163,"column":62}},"114":{"start":{"line":164,"column":10},"end":{"line":164,"column":17}},"115":{"start":{"line":169,"column":4},"end":{"line":182,"column":7}},"116":{"start":{"line":170,"column":6},"end":{"line":181,"column":9}},"117":{"start":{"line":171,"column":8},"end":{"line":171,"column":36}},"118":{"start":{"line":172,"column":8},"end":{"line":172,"column":39}},"119":{"start":{"line":173,"column":8},"end":{"line":173,"column":58}},"120":{"start":{"line":174,"column":8},"end":{"line":174,"column":150}},"121":{"start":{"line":175,"column":8},"end":{"line":175,"column":51}},"122":{"start":{"line":176,"column":8},"end":{"line":176,"column":60}},"123":{"start":{"line":177,"column":8},"end":{"line":177,"column":56}},"124":{"start":{"line":178,"column":8},"end":{"line":178,"column":57}},"125":{"start":{"line":179,"column":8},"end":{"line":179,"column":58}},"126":{"start":{"line":180,"column":8},"end":{"line":180,"column":15}},"127":{"start":{"line":185,"column":2},"end":{"line":244,"column":5}},"128":{"start":{"line":186,"column":4},"end":{"line":209,"column":7}},"129":{"start":{"line":187,"column":6},"end":{"line":208,"column":9}},"130":{"start":{"line":188,"column":8},"end":{"line":188,"column":46}},"131":{"start":{"line":189,"column":8},"end":{"line":207,"column":11}},"132":{"start":{"line":190,"column":10},"end":{"line":206,"column":13}},"133":{"start":{"line":195,"column":12},"end":{"line":195,"column":40}},"134":{"start":{"line":196,"column":12},"end":{"line":196,"column":43}},"135":{"start":{"line":197,"column":12},"end":{"line":197,"column":70}},"136":{"start":{"line":199,"column":12},"end":{"line":199,"column":73}},"137":{"start":{"line":200,"column":12},"end":{"line":200,"column":69}},"138":{"start":{"line":201,"column":12},"end":{"line":201,"column":72}},"139":{"start":{"line":202,"column":12},"end":{"line":202,"column":74}},"140":{"start":{"line":203,"column":12},"end":{"line":203,"column":64}},"141":{"start":{"line":204,"column":12},"end":{"line":204,"column":74}},"142":{"start":{"line":205,"column":12},"end":{"line":205,"column":19}},"143":{"start":{"line":211,"column":4},"end":{"line":224,"column":7}},"144":{"start":{"line":212,"column":6},"end":{"line":223,"column":9}},"145":{"start":{"line":213,"column":8},"end":{"line":213,"column":36}},"146":{"start":{"line":214,"column":8},"end":{"line":214,"column":39}},"147":{"start":{"line":215,"column":8},"end":{"line":215,"column":58}},"148":{"start":{"line":216,"column":8},"end":{"line":216,"column":150}},"149":{"start":{"line":217,"column":8},"end":{"line":217,"column":51}},"150":{"start":{"line":218,"column":8},"end":{"line":218,"column":60}},"151":{"start":{"line":219,"column":8},"end":{"line":219,"column":56}},"152":{"start":{"line":220,"column":8},"end":{"line":220,"column":57}},"153":{"start":{"line":221,"column":8},"end":{"line":221,"column":58}},"154":{"start":{"line":222,"column":8},"end":{"line":222,"column":15}},"155":{"start":{"line":225,"column":4},"end":{"line":243,"column":7}},"156":{"start":{"line":226,"column":6},"end":{"line":242,"column":9}},"157":{"start":{"line":227,"column":8},"end":{"line":227,"column":46}},"158":{"start":{"line":228,"column":8},"end":{"line":241,"column":11}},"159":{"start":{"line":229,"column":10},"end":{"line":240,"column":13}},"160":{"start":{"line":230,"column":12},"end":{"line":230,"column":40}},"161":{"start":{"line":231,"column":12},"end":{"line":231,"column":43}},"162":{"start":{"line":232,"column":12},"end":{"line":232,"column":62}},"163":{"start":{"line":233,"column":12},"end":{"line":233,"column":84}},"164":{"start":{"line":234,"column":12},"end":{"line":234,"column":55}},"165":{"start":{"line":235,"column":12},"end":{"line":235,"column":64}},"166":{"start":{"line":236,"column":12},"end":{"line":236,"column":60}},"167":{"start":{"line":237,"column":12},"end":{"line":237,"column":61}},"168":{"start":{"line":238,"column":12},"end":{"line":238,"column":62}},"169":{"start":{"line":239,"column":12},"end":{"line":239,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":21},"end":{"line":29,"column":22}},"loc":{"start":{"line":29,"column":37},"end":{"line":245,"column":1}},"line":29},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":13},"end":{"line":30,"column":14}},"loc":{"start":{"line":30,"column":29},"end":{"line":36,"column":3}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":39},"end":{"line":31,"column":40}},"loc":{"start":{"line":31,"column":54},"end":{"line":35,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":38},"end":{"line":32,"column":39}},"loc":{"start":{"line":32,"column":53},"end":{"line":34,"column":7}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":28},"end":{"line":38,"column":29}},"loc":{"start":{"line":38,"column":40},"end":{"line":97,"column":3}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":71},"end":{"line":39,"column":72}},"loc":{"start":{"line":39,"column":87},"end":{"line":58,"column":5}},"line":39},"6":{"name":"(anonymous_6)","decl":{"start":{"line":40,"column":62},"end":{"line":40,"column":63}},"loc":{"start":{"line":40,"column":75},"end":{"line":57,"column":7}},"line":40},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":106},"end":{"line":43,"column":107}},"loc":{"start":{"line":43,"column":126},"end":{"line":56,"column":9}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":60,"column":66},"end":{"line":60,"column":67}},"loc":{"start":{"line":60,"column":82},"end":{"line":96,"column":5}},"line":60},"9":{"name":"(anonymous_9)","decl":{"start":{"line":61,"column":82},"end":{"line":61,"column":83}},"loc":{"start":{"line":61,"column":102},"end":{"line":95,"column":7}},"line":61},"10":{"name":"(anonymous_10)","decl":{"start":{"line":99,"column":28},"end":{"line":99,"column":29}},"loc":{"start":{"line":99,"column":40},"end":{"line":114,"column":3}},"line":99},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":37},"end":{"line":100,"column":38}},"loc":{"start":{"line":100,"column":53},"end":{"line":109,"column":5}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":101,"column":72},"end":{"line":101,"column":73}},"loc":{"start":{"line":101,"column":92},"end":{"line":108,"column":7}},"line":101},"13":{"name":"(anonymous_13)","decl":{"start":{"line":111,"column":60},"end":{"line":111,"column":61}},"loc":{"start":{"line":111,"column":76},"end":{"line":113,"column":5}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":116,"column":31},"end":{"line":116,"column":32}},"loc":{"start":{"line":116,"column":43},"end":{"line":146,"column":3}},"line":116},"15":{"name":"(anonymous_15)","decl":{"start":{"line":117,"column":61},"end":{"line":117,"column":62}},"loc":{"start":{"line":117,"column":77},"end":{"line":130,"column":5}},"line":117},"16":{"name":"(anonymous_16)","decl":{"start":{"line":118,"column":62},"end":{"line":118,"column":63}},"loc":{"start":{"line":118,"column":75},"end":{"line":129,"column":7}},"line":118},"17":{"name":"(anonymous_17)","decl":{"start":{"line":120,"column":70},"end":{"line":120,"column":71}},"loc":{"start":{"line":120,"column":83},"end":{"line":128,"column":9}},"line":120},"18":{"name":"(anonymous_18)","decl":{"start":{"line":121,"column":97},"end":{"line":121,"column":98}},"loc":{"start":{"line":121,"column":117},"end":{"line":127,"column":11}},"line":121},"19":{"name":"(anonymous_19)","decl":{"start":{"line":132,"column":81},"end":{"line":132,"column":82}},"loc":{"start":{"line":132,"column":97},"end":{"line":145,"column":5}},"line":132},"20":{"name":"(anonymous_20)","decl":{"start":{"line":133,"column":88},"end":{"line":133,"column":89}},"loc":{"start":{"line":133,"column":108},"end":{"line":144,"column":7}},"line":133},"21":{"name":"(anonymous_21)","decl":{"start":{"line":148,"column":32},"end":{"line":148,"column":33}},"loc":{"start":{"line":148,"column":44},"end":{"line":183,"column":3}},"line":148},"22":{"name":"(anonymous_22)","decl":{"start":{"line":149,"column":44},"end":{"line":149,"column":45}},"loc":{"start":{"line":149,"column":60},"end":{"line":167,"column":5}},"line":149},"23":{"name":"(anonymous_23)","decl":{"start":{"line":150,"column":68},"end":{"line":150,"column":69}},"loc":{"start":{"line":150,"column":81},"end":{"line":166,"column":7}},"line":150},"24":{"name":"(anonymous_24)","decl":{"start":{"line":151,"column":97},"end":{"line":151,"column":98}},"loc":{"start":{"line":151,"column":117},"end":{"line":165,"column":9}},"line":151},"25":{"name":"(anonymous_25)","decl":{"start":{"line":169,"column":81},"end":{"line":169,"column":82}},"loc":{"start":{"line":169,"column":97},"end":{"line":182,"column":5}},"line":169},"26":{"name":"(anonymous_26)","decl":{"start":{"line":170,"column":82},"end":{"line":170,"column":83}},"loc":{"start":{"line":170,"column":102},"end":{"line":181,"column":7}},"line":170},"27":{"name":"(anonymous_27)","decl":{"start":{"line":185,"column":30},"end":{"line":185,"column":31}},"loc":{"start":{"line":185,"column":42},"end":{"line":244,"column":3}},"line":185},"28":{"name":"(anonymous_28)","decl":{"start":{"line":186,"column":50},"end":{"line":186,"column":51}},"loc":{"start":{"line":186,"column":66},"end":{"line":209,"column":5}},"line":186},"29":{"name":"(anonymous_29)","decl":{"start":{"line":187,"column":62},"end":{"line":187,"column":63}},"loc":{"start":{"line":187,"column":75},"end":{"line":208,"column":7}},"line":187},"30":{"name":"(anonymous_30)","decl":{"start":{"line":189,"column":70},"end":{"line":189,"column":71}},"loc":{"start":{"line":189,"column":83},"end":{"line":207,"column":9}},"line":189},"31":{"name":"(anonymous_31)","decl":{"start":{"line":194,"column":17},"end":{"line":194,"column":18}},"loc":{"start":{"line":194,"column":37},"end":{"line":206,"column":11}},"line":194},"32":{"name":"(anonymous_32)","decl":{"start":{"line":211,"column":81},"end":{"line":211,"column":82}},"loc":{"start":{"line":211,"column":97},"end":{"line":224,"column":5}},"line":211},"33":{"name":"(anonymous_33)","decl":{"start":{"line":212,"column":113},"end":{"line":212,"column":114}},"loc":{"start":{"line":212,"column":133},"end":{"line":223,"column":7}},"line":212},"34":{"name":"(anonymous_34)","decl":{"start":{"line":225,"column":78},"end":{"line":225,"column":79}},"loc":{"start":{"line":225,"column":94},"end":{"line":243,"column":5}},"line":225},"35":{"name":"(anonymous_35)","decl":{"start":{"line":226,"column":62},"end":{"line":226,"column":63}},"loc":{"start":{"line":226,"column":75},"end":{"line":242,"column":7}},"line":226},"36":{"name":"(anonymous_36)","decl":{"start":{"line":228,"column":70},"end":{"line":228,"column":71}},"loc":{"start":{"line":228,"column":83},"end":{"line":241,"column":9}},"line":228},"37":{"name":"(anonymous_37)","decl":{"start":{"line":229,"column":100},"end":{"line":229,"column":101}},"loc":{"start":{"line":229,"column":120},"end":{"line":240,"column":11}},"line":229}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":11,"15":11,"16":11,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1},"f":{"0":1,"1":11,"2":11,"3":11,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1},"b":{},"inputSourceMap":{"version":3,"sources":["product.js"],"names":["chai","should","expect","use","chaiDateString","chaiHttp","describe","done","beforeEach","Product","deleteMany","err","User","it","dummyUser","save","then","u","dummyProduct","user","_id","request","server","post","send","end","res","have","status","body","be","a","property","eql","data","to","date","dateString","details","Object","keys","length","name","description","get","p","id","put","price"],"mappings":"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","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\","sourcesContent":["import chai from 'chai'\r\nimport chaiHttp from 'chai-http'\r\nimport server from '../../server'\r\nimport Product from '../../models/product'\r\nimport User from '../../models/user'\r\nimport chaiDateString from 'chai-date-string'\r\nimport { dummyUser, dummyProduct } from '../configData'\r\n// Enable Chai Config when testing\r\nchai.should()\r\nconst expect = chai.expect\r\nchai.use(chaiDateString)\r\nchai.use(chaiHttp)\r\n\r\n//  ADD MORGAN LOGS and change env to test for this\r\n\r\ndescribe('Products', (done) => {\r\n    beforeEach((done) => {\r\n        Product.deleteMany({}, (err) => {\r\n            User.deleteMany({}, (err) => {\r\n                done()\r\n            })\r\n        })        \r\n    })\r\n\r\n    // Create a product\r\n    describe('/POST Product', () => {\r\n        it('it should not create a product without product field details', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                chai.request(server)\r\n                .post(`/products`)\r\n                .send(dummyProduct)\r\n                .end((err, res) => {\r\n                    res.should.have.status(201)\r\n                    res.body.should.be.a('object')\r\n                    res.body.should.have.property('errors').eql(false)\r\n                    res.body.should.have.property('data')\r\n                    res.body.data.should.be.a('object')\r\n                    // Check product details\r\n                    res.body.data.should.have.property('name').to.be.a('string')\r\n                    res.body.data.should.have.property('_id').to.be.a('string')\r\n                    res.body.data.should.have.property('price').to.be.a('number')\r\n                    res.body.data.should.have.property('description').to.be.a('string')\r\n                    expect(res.body.data.date).to.be.a.dateString()\r\n                    done()\r\n                })\r\n            })\r\n        })\r\n        // Test error in request endpoint\r\n        it('it should fail when request has missing product details', (done) => {\r\n            chai.request(server)\r\n                .post(`/products`)\r\n                .send({})\r\n                .end((err, res) => {\r\n                    res.should.have.status(400)\r\n                    res.body.should.be.a('object')\r\n                    res.body.should.have.property('errors').eql(true)\r\n                    res.body.should.have.property('errors').eql(true)\r\n                    res.body.should.have.property('logError').to.be.a('string')\r\n                    res.body.should.have.property('details').should.be.a('object')\r\n                    res.body.details.should.be.a('object')\r\n                    expect(Object.keys(res.body.details).length).eql(3)\r\n                    res.body.details.should.have.property('name')\r\n                    res.body.details.should.have.property('description')\r\n                    res.body.details.should.have.property('user')\r\n                    // Name\r\n                    res.body.details.name.should.have.property('name')\r\n                    res.body.details.name.should.have.property('message')\r\n                    res.body.details.name.should.have.property('properties')\r\n                    res.body.details.name.should.have.property('kind')\r\n                    res.body.details.name.should.have.property('path')\r\n                    expect(Object.keys(res.body.details.name).length).eql(5)\r\n                    // Description \r\n                    res.body.details.description.should.have.property('name')\r\n                    res.body.details.description.should.have.property('message')\r\n                    res.body.details.description.should.have.property('properties')\r\n                    res.body.details.description.should.have.property('kind')\r\n                    res.body.details.description.should.have.property('path')\r\n                    expect(Object.keys(res.body.details.description).length).eql(5)\r\n                    // User\r\n                    res.body.details.user.should.have.property('name')\r\n                    res.body.details.user.should.have.property('message')\r\n                    res.body.details.user.should.have.property('properties')\r\n                    res.body.details.user.should.have.property('kind')\r\n                    res.body.details.user.should.have.property('path')\r\n                    expect(Object.keys(res.body.details.user).length).eql(5)\r\n                    done()\r\n                })\r\n        })\r\n    })\r\n\r\n    // GET for all products - Test\r\n    describe('/GET products', () => {\r\n        it('it should get all products', (done) => {\r\n            chai.request(server)\r\n            .get('/products')\r\n            .end((err, res) => {\r\n                res.should.have.status(200)\r\n                res.body.should.have.property('message').eql('OK')\r\n                res.body.data.should.be.a('array')\r\n                res.body.data.length.should.be.eql(0)\r\n                res.body.should.have.property('errors').eql(false)\r\n                done()\r\n            })\r\n        })\r\n        // Test error handling\r\n        it('it should handle errors when jwt token is missing', (done)  => {\r\n            done()\r\n            //TODO -- Add code here\r\n        })\r\n    })\r\n\r\n     // Delete a Product\r\n     describe('/DELETE products', () => {\r\n        it('it should check delete functionality for a product', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    chai.request(server)\r\n                    .delete(`/products/${p._id}`)\r\n                    .end((err, res) => {\r\n                        res.should.have.status(200)\r\n                        res.body.should.be.a('object')\r\n                        res.body.should.have.property('errors').eql(false)\r\n                        res.body.should.have.a.property('message').eql('Deleted')\r\n                        done()\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        // Test error handling\r\n        it('it should handle error when incorrect product id is present in the url', (done) => {\r\n            chai.request(server)\r\n            .delete(`/products/gibberish`)\r\n            .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.a.property('logError').eql('CastError: Cast to ObjectId failed for value \"gibberish\" at path \"_id\" for model \"Product\"')\r\n                res.body.should.have.a.property('details')\r\n                expect(Object.keys(res.body.details).length).eql(3)\r\n                res.body.details.should.have.a.property('kind')\r\n                res.body.details.should.have.a.property('value')\r\n                res.body.details.should.have.a.property('reason')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // GET Product based on id\r\n    describe('/GET{id} products', () => {\r\n        it('it should get product based on id', (done) => {\r\n            new Product(dummyProduct).save().then((p) => {\r\n                chai.request(server)\r\n                .get(`/products/${p._id}`)\r\n                .send(p)\r\n                .end((err, res) => {\r\n                    res.should.have.status(200)\r\n                    res.body.should.be.a('object')\r\n                    res.body.should.have.property('errors').eql(false)\r\n                    res.body.should.have.property('data')\r\n                    res.body.data.should.be.a('object')\r\n                    // Check product details\r\n                    res.body.data.should.have.property('name').to.be.a('string')\r\n                    res.body.data.should.have.property('_id').to.be.a('string')\r\n                    res.body.data.should.have.property('price').to.be.a('number')\r\n                    res.body.data.should.have.property('description').to.be.a('string')\r\n                    expect(res.body.data.date).to.be.a.dateString()\r\n                    res.body.data.should.have.property('_id').eql(p.id)\r\n\r\n                    done()\r\n                })\r\n            })\r\n        })\r\n         // Test error handling\r\n         it('it should handle error when incorrect product id is present in the url', (done) => {\r\n            chai.request(server)\r\n            .get(`/products/gibberish`)\r\n            .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.a.property('logError').eql('CastError: Cast to ObjectId failed for value \"gibberish\" at path \"_id\" for model \"Product\"')\r\n                res.body.should.have.a.property('details')\r\n                expect(Object.keys(res.body.details).length).eql(3)\r\n                res.body.details.should.have.a.property('kind')\r\n                res.body.details.should.have.a.property('value')\r\n                res.body.details.should.have.a.property('reason')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // Update a Product\r\n    describe('PUT/:id Product', () => {\r\n        it('it should UPDATE a product given the id', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    chai.request(server)\r\n                    .put(`/products/${p._id}`)\r\n                    .send({ name: 'test12', description: 'test', price: 14 })\r\n                    .end((err, res) => {\r\n                        res.should.have.status(200);\r\n                        res.body.should.be.a('object');\r\n                        res.body.should.have.a.property('message').eql('Updated')\r\n                        // // Check User details\r\n                        res.body.data.should.have.property('name').to.be.a('string')\r\n                        res.body.data.should.have.property('name').eql('test12')\r\n                        res.body.data.should.have.property('_id').to.be.a('string')\r\n                        res.body.data.should.have.property('price').to.be.a('number')\r\n                        res.body.data.should.have.property('price').eql(14)\r\n                        res.body.data.should.have.property('description').eql('test')\r\n                    done()\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        // Test error handling\r\n        it('it should handle error when incorrect product id is present in the url', (done) => {\r\n            chai.request(server)\r\n            .put(`/products/gibberish`)\r\n            .send(dummyProduct)\r\n            .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.a.property('logError').eql('CastError: Cast to ObjectId failed for value \"gibberish\" at path \"_id\" for model \"Product\"')\r\n                res.body.should.have.a.property('details')\r\n                expect(Object.keys(res.body.details).length).eql(3)\r\n                res.body.details.should.have.a.property('kind')\r\n                res.body.details.should.have.a.property('value')\r\n                res.body.details.should.have.a.property('reason')\r\n                done()\r\n            })\r\n        })\r\n        it('it should handle error when no product object is present in request', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                dummyProduct.user = u._id\r\n                new Product(dummyProduct).save().then((p) => {\r\n                    chai.request(server)\r\n                    .put(`/products/${p._id}`)\r\n                    .send({})\r\n                    .end((err, res) => {\r\n                        res.should.have.status(400)\r\n                        res.body.should.be.a('object')\r\n                        res.body.should.have.property('errors').eql(true)\r\n                        res.body.should.have.a.property('logError').eql('Invalid request body')\r\n                        res.body.should.have.a.property('details')\r\n                        expect(Object.keys(res.body.details).length).eql(4)\r\n                        res.body.details.should.have.a.property('kind')\r\n                        res.body.details.should.have.a.property('value')\r\n                        res.body.details.should.have.a.property('reason')\r\n                        done()\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    })\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6046d92db51784151395321b45bcb8182b890547","contentHash":"e5e54045d4ce3c7fa82259ea979feaf1f3b30d379931533a235549ef4259dbd9"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\root.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\root.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":14},"end":{"line":9,"column":61}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":26}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"6":{"start":{"line":17,"column":0},"end":{"line":33,"column":3}},"7":{"start":{"line":18,"column":2},"end":{"line":32,"column":5}},"8":{"start":{"line":19,"column":4},"end":{"line":31,"column":7}},"9":{"start":{"line":20,"column":6},"end":{"line":30,"column":9}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":36}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":39}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":59}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":68}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":64}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":68}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":61}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":65}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":38},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":54},"end":{"line":33,"column":1}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":27},"end":{"line":18,"column":28}},"loc":{"start":{"line":18,"column":39},"end":{"line":32,"column":3}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":49},"end":{"line":19,"column":50}},"loc":{"start":{"line":19,"column":65},"end":{"line":31,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":65},"end":{"line":20,"column":66}},"loc":{"start":{"line":20,"column":85},"end":{"line":30,"column":7}},"line":20}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{},"inputSourceMap":{"version":3,"sources":["root.js"],"names":["chai","should","use","chaiHttp","describe","done","it","request","server","get","end","err","res","have","status","body","be","a","property","eql","to","length"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA;AACAA,iBAAKC,MAAL;;AACAD,iBAAKE,GAAL,CAASC,oBAAT,E,CAEA;;;AAEAC,QAAQ,CAAC,2BAAD,EAA8B,UAACC,IAAD,EAAU;AAC5CD,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC3BE,IAAAA,EAAE,CAAC,wCAAD,EAA2C,UAACD,IAAD,EAAU;AACnDL,uBAAKO,OAAL,CAAaC,kBAAb,EACCC,GADD,CACK,IADL,EAECC,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,QAAAA,GAAG,CAACX,MAAJ,CAAWY,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBe,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAL,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBK,QAArB,CAA8B,QAA9B,EAAwCC,GAAxC,CAA4C,KAA5C;AACAP,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,aAA7C;AACAP,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBK,QAArB,CAA8B,UAA9B,EAA0CF,EAA1C,CAA6CC,CAA7C,CAA+C,OAA/C;AACAL,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBK,QAArB,CAA8B,UAA9B,EAA0CE,EAA1C,CAA6CP,IAA7C,CAAkDQ,MAAlD,CAAyD,CAAzD;AACAT,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBK,QAArB,CAA8B,OAA9B,EAAuCF,EAAvC,CAA0CC,CAA1C,CAA4C,OAA5C;AACAL,QAAAA,GAAG,CAACG,IAAJ,CAASd,MAAT,CAAgBY,IAAhB,CAAqBK,QAArB,CAA8B,OAA9B,EAAuCE,EAAvC,CAA0CP,IAA1C,CAA+CQ,MAA/C,CAAsD,CAAtD;AACAhB,QAAAA,IAAI;AACP,OAZD;AAaH,KAdC,CAAF;AAeH,GAhBO,CAAR;AAiBH,CAlBO,CAAR","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\","sourcesContent":["import chai from 'chai'\r\nimport chaiHttp from 'chai-http'\r\nimport server from '../../server'\r\n\r\n// Enable Chai Config when testing\r\nchai.should()\r\nchai.use(chaiHttp)\r\n\r\n//  ADD MORGAN LOGS and change env to test for this\r\n\r\ndescribe('Summary for all endpoints', (done) => {\r\n    describe('/_ Root Path', () => {\r\n        it('it should have empty paths in response', (done) => {\r\n            chai.request(server)\r\n            .get('/_')\r\n            .end((err, res) => {\r\n                res.should.have.status(200)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(false)\r\n                res.body.should.have.property('message').eql('Route_Paths')\r\n                res.body.should.have.property('products').be.a('array')\r\n                res.body.should.have.property('products').to.have.length(5)\r\n                res.body.should.have.property('users').be.a('array')\r\n                res.body.should.have.property('users').to.have.length(5)\r\n                done()\r\n            })\r\n        })\r\n    })\r\n})\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bda83f750e7ff089f99974250ecdd65e0bc7db9e","contentHash":"9d70f56fbb0cc581c95438460162e0a109882e5a8eaf24a40173083e6149dd0e"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\user.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\user.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":14},"end":{"line":9,"column":61}},"4":{"start":{"line":11,"column":12},"end":{"line":11,"column":64}},"5":{"start":{"line":13,"column":22},"end":{"line":13,"column":73}},"6":{"start":{"line":15,"column":18},"end":{"line":15,"column":42}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}},"8":{"start":{"line":20,"column":13},"end":{"line":20,"column":36}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}},"11":{"start":{"line":27,"column":0},"end":{"line":160,"column":3}},"12":{"start":{"line":28,"column":2},"end":{"line":32,"column":5}},"13":{"start":{"line":29,"column":4},"end":{"line":31,"column":7}},"14":{"start":{"line":30,"column":6},"end":{"line":30,"column":13}},"15":{"start":{"line":34,"column":2},"end":{"line":63,"column":5}},"16":{"start":{"line":35,"column":4},"end":{"line":51,"column":7}},"17":{"start":{"line":36,"column":6},"end":{"line":50,"column":9}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":36}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":39}},"20":{"start":{"line":39,"column":8},"end":{"line":39,"column":59}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":46}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":44}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":73}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":68}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":73}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":81}},"27":{"start":{"line":47,"column":8},"end":{"line":47,"column":70}},"28":{"start":{"line":48,"column":8},"end":{"line":48,"column":56}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":15}},"30":{"start":{"line":53,"column":4},"end":{"line":62,"column":7}},"31":{"start":{"line":54,"column":6},"end":{"line":61,"column":9}},"32":{"start":{"line":55,"column":8},"end":{"line":55,"column":36}},"33":{"start":{"line":56,"column":8},"end":{"line":56,"column":39}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":58}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":80}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":104}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":15}},"38":{"start":{"line":65,"column":2},"end":{"line":80,"column":5}},"39":{"start":{"line":66,"column":4},"end":{"line":75,"column":7}},"40":{"start":{"line":67,"column":6},"end":{"line":74,"column":9}},"41":{"start":{"line":68,"column":8},"end":{"line":68,"column":36}},"42":{"start":{"line":69,"column":8},"end":{"line":69,"column":59}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":43}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":46}},"45":{"start":{"line":72,"column":8},"end":{"line":72,"column":59}},"46":{"start":{"line":73,"column":8},"end":{"line":73,"column":15}},"47":{"start":{"line":77,"column":4},"end":{"line":79,"column":7}},"48":{"start":{"line":78,"column":6},"end":{"line":78,"column":13}},"49":{"start":{"line":82,"column":2},"end":{"line":103,"column":5}},"50":{"start":{"line":83,"column":4},"end":{"line":93,"column":7}},"51":{"start":{"line":84,"column":6},"end":{"line":92,"column":9}},"52":{"start":{"line":85,"column":8},"end":{"line":91,"column":11}},"53":{"start":{"line":86,"column":10},"end":{"line":86,"column":38}},"54":{"start":{"line":87,"column":10},"end":{"line":87,"column":41}},"55":{"start":{"line":88,"column":10},"end":{"line":88,"column":61}},"56":{"start":{"line":89,"column":10},"end":{"line":89,"column":68}},"57":{"start":{"line":90,"column":10},"end":{"line":90,"column":17}},"58":{"start":{"line":95,"column":4},"end":{"line":102,"column":7}},"59":{"start":{"line":96,"column":6},"end":{"line":101,"column":9}},"60":{"start":{"line":97,"column":8},"end":{"line":97,"column":36}},"61":{"start":{"line":98,"column":8},"end":{"line":98,"column":58}},"62":{"start":{"line":99,"column":8},"end":{"line":99,"column":49}},"63":{"start":{"line":100,"column":8},"end":{"line":100,"column":15}},"64":{"start":{"line":105,"column":2},"end":{"line":130,"column":5}},"65":{"start":{"line":106,"column":4},"end":{"line":129,"column":7}},"66":{"start":{"line":107,"column":17},"end":{"line":111,"column":8}},"67":{"start":{"line":112,"column":6},"end":{"line":128,"column":9}},"68":{"start":{"line":113,"column":8},"end":{"line":127,"column":11}},"69":{"start":{"line":114,"column":10},"end":{"line":114,"column":38}},"70":{"start":{"line":115,"column":10},"end":{"line":115,"column":41}},"71":{"start":{"line":116,"column":10},"end":{"line":116,"column":61}},"72":{"start":{"line":117,"column":10},"end":{"line":117,"column":48}},"73":{"start":{"line":118,"column":10},"end":{"line":118,"column":46}},"74":{"start":{"line":120,"column":10},"end":{"line":120,"column":75}},"75":{"start":{"line":121,"column":10},"end":{"line":121,"column":70}},"76":{"start":{"line":122,"column":10},"end":{"line":122,"column":75}},"77":{"start":{"line":123,"column":10},"end":{"line":123,"column":83}},"78":{"start":{"line":124,"column":10},"end":{"line":124,"column":72}},"79":{"start":{"line":125,"column":10},"end":{"line":125,"column":58}},"80":{"start":{"line":126,"column":10},"end":{"line":126,"column":17}},"81":{"start":{"line":132,"column":2},"end":{"line":159,"column":5}},"82":{"start":{"line":133,"column":4},"end":{"line":158,"column":7}},"83":{"start":{"line":134,"column":17},"end":{"line":138,"column":8}},"84":{"start":{"line":139,"column":6},"end":{"line":157,"column":9}},"85":{"start":{"line":140,"column":8},"end":{"line":156,"column":11}},"86":{"start":{"line":145,"column":10},"end":{"line":145,"column":38}},"87":{"start":{"line":146,"column":10},"end":{"line":146,"column":41}},"88":{"start":{"line":147,"column":10},"end":{"line":147,"column":68}},"89":{"start":{"line":149,"column":10},"end":{"line":149,"column":75}},"90":{"start":{"line":150,"column":10},"end":{"line":150,"column":71}},"91":{"start":{"line":151,"column":10},"end":{"line":151,"column":70}},"92":{"start":{"line":153,"column":10},"end":{"line":153,"column":72}},"93":{"start":{"line":154,"column":10},"end":{"line":154,"column":75}},"94":{"start":{"line":155,"column":10},"end":{"line":155,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":34},"end":{"line":160,"column":1}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":13},"end":{"line":28,"column":14}},"loc":{"start":{"line":28,"column":29},"end":{"line":32,"column":3}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":36},"end":{"line":29,"column":37}},"loc":{"start":{"line":29,"column":51},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":25},"end":{"line":34,"column":26}},"loc":{"start":{"line":34,"column":37},"end":{"line":63,"column":3}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":56},"end":{"line":35,"column":57}},"loc":{"start":{"line":35,"column":72},"end":{"line":51,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":98},"end":{"line":36,"column":99}},"loc":{"start":{"line":36,"column":118},"end":{"line":50,"column":7}},"line":36},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":65},"end":{"line":53,"column":66}},"loc":{"start":{"line":53,"column":81},"end":{"line":62,"column":5}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":79},"end":{"line":54,"column":80}},"loc":{"start":{"line":54,"column":99},"end":{"line":61,"column":7}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":25},"end":{"line":65,"column":26}},"loc":{"start":{"line":65,"column":37},"end":{"line":80,"column":3}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":66,"column":34},"end":{"line":66,"column":35}},"loc":{"start":{"line":66,"column":50},"end":{"line":75,"column":5}},"line":66},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":69},"end":{"line":67,"column":70}},"loc":{"start":{"line":67,"column":89},"end":{"line":74,"column":7}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":77,"column":45},"end":{"line":77,"column":46}},"loc":{"start":{"line":77,"column":61},"end":{"line":79,"column":5}},"line":77},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":27},"end":{"line":82,"column":28}},"loc":{"start":{"line":82,"column":39},"end":{"line":103,"column":3}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":83,"column":44},"end":{"line":83,"column":45}},"loc":{"start":{"line":83,"column":60},"end":{"line":93,"column":5}},"line":83},"14":{"name":"(anonymous_14)","decl":{"start":{"line":84,"column":62},"end":{"line":84,"column":63}},"loc":{"start":{"line":84,"column":75},"end":{"line":92,"column":7}},"line":84},"15":{"name":"(anonymous_15)","decl":{"start":{"line":85,"column":92},"end":{"line":85,"column":93}},"loc":{"start":{"line":85,"column":112},"end":{"line":91,"column":9}},"line":85},"16":{"name":"(anonymous_16)","decl":{"start":{"line":95,"column":75},"end":{"line":95,"column":76}},"loc":{"start":{"line":95,"column":91},"end":{"line":102,"column":5}},"line":95},"17":{"name":"(anonymous_17)","decl":{"start":{"line":96,"column":85},"end":{"line":96,"column":86}},"loc":{"start":{"line":96,"column":105},"end":{"line":101,"column":7}},"line":96},"18":{"name":"(anonymous_18)","decl":{"start":{"line":105,"column":28},"end":{"line":105,"column":29}},"loc":{"start":{"line":105,"column":40},"end":{"line":130,"column":3}},"line":105},"19":{"name":"(anonymous_19)","decl":{"start":{"line":106,"column":41},"end":{"line":106,"column":42}},"loc":{"start":{"line":106,"column":57},"end":{"line":129,"column":5}},"line":106},"20":{"name":"(anonymous_20)","decl":{"start":{"line":112,"column":23},"end":{"line":112,"column":24}},"loc":{"start":{"line":112,"column":36},"end":{"line":128,"column":7}},"line":112},"21":{"name":"(anonymous_21)","decl":{"start":{"line":113,"column":94},"end":{"line":113,"column":95}},"loc":{"start":{"line":113,"column":114},"end":{"line":127,"column":9}},"line":113},"22":{"name":"(anonymous_22)","decl":{"start":{"line":132,"column":27},"end":{"line":132,"column":28}},"loc":{"start":{"line":132,"column":39},"end":{"line":159,"column":3}},"line":132},"23":{"name":"(anonymous_23)","decl":{"start":{"line":133,"column":47},"end":{"line":133,"column":48}},"loc":{"start":{"line":133,"column":63},"end":{"line":158,"column":5}},"line":133},"24":{"name":"(anonymous_24)","decl":{"start":{"line":139,"column":23},"end":{"line":139,"column":24}},"loc":{"start":{"line":139,"column":36},"end":{"line":157,"column":7}},"line":139},"25":{"name":"(anonymous_25)","decl":{"start":{"line":144,"column":15},"end":{"line":144,"column":16}},"loc":{"start":{"line":144,"column":35},"end":{"line":156,"column":9}},"line":144}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":8,"14":8,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1},"f":{"0":1,"1":8,"2":8,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"b":{},"inputSourceMap":{"version":3,"sources":["user.js"],"names":["chai","should","expect","use","chaiDateString","chaiHttp","describe","done","beforeEach","User","deleteMany","err","it","request","server","post","send","dummyUser","end","res","have","status","body","be","a","property","eql","data","to","lengthOf","above","date","dateString","get","length","save","then","u","_id","user","username","email","password","put"],"mappings":"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","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\endpoints\\","sourcesContent":["import chai from 'chai'\r\nimport chaiHttp from 'chai-http'\r\nimport server from '../../server'\r\nimport User from '../../models/user'\r\nimport chaiDateString from 'chai-date-string'\r\nimport { dummyUser } from '../configData'\r\n// Enable Chai Config when testing\r\nchai.should()\r\nconst expect = chai.expect\r\nchai.use(chaiDateString)\r\nchai.use(chaiHttp)\r\n\r\n//  ADD MORGAN LOGS and change env to test for this\r\n\r\ndescribe('Users', (done) => {\r\n    beforeEach((done) => {\r\n        User.deleteMany({}, (err) => {\r\n            done()\r\n        })        \r\n    })\r\n\r\n    // Create a User\r\n    describe('/POST User', () => {\r\n        it('it should not create a user without any issue', (done) => {\r\n            chai.request(server)\r\n            .post('/users')\r\n            .send(dummyUser)\r\n            .end((err, res) => {\r\n                res.should.have.status(201)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(false)\r\n                res.body.should.have.property('data')\r\n                res.body.data.should.be.a('object')\r\n                // Check User details\r\n                res.body.data.should.have.property('username').to.be.a('string')\r\n                res.body.data.should.have.property('_id').to.be.a('string')\r\n                res.body.data.should.have.property('password').to.be.a('string')\r\n                res.body.data.should.have.property('password').to.have.lengthOf.above(4)\r\n                res.body.data.should.have.property('email').to.be.a('string')\r\n                expect(res.body.data.date).to.be.a.dateString()\r\n                done()\r\n            })\r\n        })\r\n        // Test error handling\r\n        it('it should handle error when missing fields are present', (done) => {\r\n            chai.request(server)\r\n            .post(`/users`)\r\n            .send({})\r\n            .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.be.a('object')\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.a.property('logError').eql('Invalid request body')\r\n                res.body.should.have.a.property('message').eql('Missing fields -- username, password or email')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // GET for all Users - Test\r\n    describe('/GET users', () => {\r\n        it('it should get all users', (done) => {\r\n            chai.request(server)\r\n            .get('/users')\r\n            .end((err, res) => {\r\n                res.should.have.status(200)\r\n                res.body.should.have.property('message').eql('OK')\r\n                res.body.data.should.be.a('array')\r\n                res.body.data.length.should.be.eql(0)\r\n                res.body.should.have.property('errors').eql(false)\r\n                done()\r\n            })\r\n        })\r\n         // Test error handling\r\n         it('it should handle error missing jwt', (done) => {\r\n            done()\r\n            //Todo -- add after JWT addition\r\n        })\r\n    })\r\n\r\n    // Delete a user\r\n     describe('/DELETE User', () => {\r\n        it('it should check for user deletion', (done) => {\r\n            new User(dummyUser).save().then((u) => {\r\n                chai.request(server)\r\n                .delete(`/users/${u._id}`)\r\n                .end((err, res) => {\r\n                    res.should.have.status(200)\r\n                    res.body.should.be.a('object')\r\n                    res.body.should.have.property('errors').eql(false)\r\n                    res.body.should.have.a.property('message').eql('Deleted')\r\n\r\n                    done()\r\n                })\r\n            })\r\n        })\r\n        // Test error handling\r\n        it('it should handle error when invalid user id is present on DELETE', (done) => {\r\n            chai.request(server)\r\n            .delete('/users/gibberish')\r\n            .end((err, res) => {\r\n                res.should.have.status(400)\r\n                res.body.should.have.property('errors').eql(true)\r\n                res.body.should.have.property('message')\r\n                done()\r\n            })\r\n        })\r\n    })\r\n\r\n    // GET User based on id\r\n    describe('/GET:id users', () => {\r\n        it('it should get user based on id', (done) => {\r\n            const user = new User({\r\n                username: 'test',\r\n                email: 'test@test.com',\r\n                password: 'test13',\r\n            })\r\n            user.save().then((u) => {\r\n                chai.request(server)\r\n                .get(`/users/${u._id}`)\r\n                .send(u)\r\n                .end((err, res) => {\r\n                    res.should.have.status(200)\r\n                    res.body.should.be.a('object')\r\n                    res.body.should.have.property('errors').eql(false)\r\n                    res.body.should.have.property('data')\r\n                    res.body.data.should.be.a('object')\r\n                    // Check User details\r\n                    res.body.data.should.have.property('username').to.be.a('string')\r\n                    res.body.data.should.have.property('_id').to.be.a('string')\r\n                    res.body.data.should.have.property('password').to.be.a('string')\r\n                    res.body.data.should.have.property('password').to.have.lengthOf.above(4)\r\n                    res.body.data.should.have.property('email').to.be.a('string')\r\n                    expect(res.body.data.date).to.be.a.dateString()\r\n\r\n                    done()\r\n                })\r\n            })\r\n        })\r\n    })\r\n\r\n    // Update a user\r\n    describe('PUT/:id user', () => {\r\n        it('it should UPDATE a user given the id', (done) => {\r\n            let user = new User({\r\n                username: 'test',\r\n                email: 'test@test.com',\r\n                password: 'test13',\r\n            })\r\n\r\n            user.save().then((u) => {\r\n                chai.request(server)\r\n                .put(`/users/${u._id}`)\r\n                .send({username: 'test12', email: 'test@mail.com', password: 'test14'})\r\n                .end((err, res) => {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    res.body.should.have.a.property('message').eql('Updated')\r\n                    // Check User details\r\n                    res.body.data.should.have.property('username').to.be.a('string')\r\n                    res.body.data.should.have.property('username').eql('test12')\r\n                    res.body.data.should.have.property('_id').to.be.a('string')\r\n                    // Add diff password logic\r\n                    res.body.data.should.have.property('email').to.be.a('string')\r\n                    res.body.data.should.have.property('email').eql('test@mail.com')\r\n                done();\r\n                });\r\n            });\r\n        })\r\n    })\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b822eeff1a389d7f5393a2768f33cf7a7956bc6b","contentHash":"c285924faf75828e30e09afa254116589a4080392dbf50cee3035d7d3d3fc553"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\order.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\order.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":13},"end":{"line":7,"column":66}},"3":{"start":{"line":9,"column":13},"end":{"line":9,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":18,"column":3}},"5":{"start":{"line":11,"column":2},"end":{"line":17,"column":5}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":35}},"7":{"start":{"line":13,"column":4},"end":{"line":16,"column":7}},"8":{"start":{"line":14,"column":6},"end":{"line":14,"column":39}},"9":{"start":{"line":15,"column":6},"end":{"line":15,"column":13}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":24},"end":{"line":10,"column":25}},"loc":{"start":{"line":10,"column":36},"end":{"line":18,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":51},"end":{"line":11,"column":52}},"loc":{"start":{"line":11,"column":67},"end":{"line":17,"column":3}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":16}},"loc":{"start":{"line":13,"column":30},"end":{"line":16,"column":5}},"line":13}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"sources":["order.js"],"names":["expect","chai","describe","it","done","o","Order","validate","err","errors","user","to","exist"],"mappings":";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,iBAAKD,MAApB;AAEAE,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC1BC,EAAAA,EAAE,CAAC,4CAAD,EAA+C,UAASC,IAAT,EAAe;AAC5D,QAAMC,CAAC,GAAG,IAAIC,iBAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,QAAF,CAAW,UAACC,GAAD,EAAS;AAChBR,MAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWC,IAAZ,CAAN,CAAwBC,EAAxB,CAA2BC,KAA3B;AACAR,MAAAA,IAAI;AACP,KAHD;AAIH,GANC,CAAF;AAOH,CARO,CAAR","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\","sourcesContent":["import chai from 'chai'\r\nimport Order from '../../models/order'\r\n\r\nconst expect = chai.expect\r\n \r\ndescribe('Order Model', () => {\r\n    it('should be invalid if product name is empty', function(done) {\r\n        const o = new Order()\r\n        o.validate((err) => {\r\n            expect(err.errors.user).to.exist\r\n            done()\r\n        })\r\n    })\r\n})\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f47f16c95f62dd4159ba918ac52fdd090dbf5203","contentHash":"863bb9584ed11ac7653ac06b8075c8a21aef6a55305e9245b5a83b28268cbd8d"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\product.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\product.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":15},"end":{"line":7,"column":70}},"3":{"start":{"line":9,"column":13},"end":{"line":9,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":25,"column":3}},"5":{"start":{"line":11,"column":2},"end":{"line":17,"column":5}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":37}},"7":{"start":{"line":13,"column":4},"end":{"line":16,"column":7}},"8":{"start":{"line":14,"column":6},"end":{"line":14,"column":39}},"9":{"start":{"line":15,"column":6},"end":{"line":15,"column":13}},"10":{"start":{"line":18,"column":2},"end":{"line":24,"column":5}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":37}},"12":{"start":{"line":20,"column":4},"end":{"line":23,"column":7}},"13":{"start":{"line":21,"column":6},"end":{"line":21,"column":46}},"14":{"start":{"line":22,"column":6},"end":{"line":22,"column":13}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":26},"end":{"line":10,"column":27}},"loc":{"start":{"line":10,"column":38},"end":{"line":25,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":51},"end":{"line":11,"column":52}},"loc":{"start":{"line":11,"column":67},"end":{"line":17,"column":3}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":16}},"loc":{"start":{"line":13,"column":30},"end":{"line":16,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":63},"end":{"line":24,"column":3}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":30},"end":{"line":23,"column":5}},"line":20}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"sources":["product.js"],"names":["expect","chai","describe","it","done","p","Product","validate","err","errors","name","to","exist","description"],"mappings":";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,iBAAKD,MAApB;AAEAE,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC5BC,EAAAA,EAAE,CAAC,4CAAD,EAA+C,UAASC,IAAT,EAAe;AAC5D,QAAMC,CAAC,GAAG,IAAIC,mBAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,QAAF,CAAW,UAACC,GAAD,EAAS;AAChBR,MAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWC,IAAZ,CAAN,CAAwBC,EAAxB,CAA2BC,KAA3B;AACAR,MAAAA,IAAI;AACP,KAHD;AAIH,GANC,CAAF;AAQAD,EAAAA,EAAE,CAAC,wCAAD,EAA2C,UAASC,IAAT,EAAe;AACxD,QAAMC,CAAC,GAAG,IAAIC,mBAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,QAAF,CAAW,UAACC,GAAD,EAAS;AAChBR,MAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWI,WAAZ,CAAN,CAA+BF,EAA/B,CAAkCC,KAAlC;AACAR,MAAAA,IAAI;AACP,KAHD;AAIH,GANC,CAAF;AAOH,CAhBO,CAAR","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\","sourcesContent":["import chai from 'chai'\r\nimport Product from '../../models/product'\r\n\r\nconst expect = chai.expect\r\n \r\ndescribe('Product Model', () => {\r\n    it('should be invalid if product name is empty', function(done) {\r\n        const p = new Product()    \r\n        p.validate((err) => {\r\n            expect(err.errors.name).to.exist\r\n            done()\r\n        })\r\n    })\r\n\r\n    it('should be invalid if password is empty', function(done) {\r\n        const p = new Product()    \r\n        p.validate((err) => {\r\n            expect(err.errors.description).to.exist\r\n            done()\r\n        })\r\n    })\r\n})\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"14414b20861bd420e1113b6b3a6830092334cded","contentHash":"28c09546c55eb9b30e15eb05b487bc548d4bfc796fda99489c5ce8fb24b8507d"},"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\user.js":{"path":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\user.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":12},"end":{"line":7,"column":64}},"3":{"start":{"line":9,"column":13},"end":{"line":9,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":32,"column":3}},"5":{"start":{"line":11,"column":2},"end":{"line":17,"column":5}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":34}},"7":{"start":{"line":13,"column":4},"end":{"line":16,"column":7}},"8":{"start":{"line":14,"column":6},"end":{"line":14,"column":43}},"9":{"start":{"line":15,"column":6},"end":{"line":15,"column":13}},"10":{"start":{"line":18,"column":2},"end":{"line":24,"column":5}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":34}},"12":{"start":{"line":20,"column":4},"end":{"line":23,"column":7}},"13":{"start":{"line":21,"column":6},"end":{"line":21,"column":43}},"14":{"start":{"line":22,"column":6},"end":{"line":22,"column":13}},"15":{"start":{"line":25,"column":2},"end":{"line":31,"column":5}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":34}},"17":{"start":{"line":27,"column":4},"end":{"line":30,"column":7}},"18":{"start":{"line":28,"column":6},"end":{"line":28,"column":40}},"19":{"start":{"line":29,"column":6},"end":{"line":29,"column":13}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":23},"end":{"line":10,"column":24}},"loc":{"start":{"line":10,"column":35},"end":{"line":32,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":47},"end":{"line":11,"column":48}},"loc":{"start":{"line":11,"column":63},"end":{"line":17,"column":3}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":16}},"loc":{"start":{"line":13,"column":30},"end":{"line":16,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":63},"end":{"line":24,"column":3}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":30},"end":{"line":23,"column":5}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":44},"end":{"line":25,"column":45}},"loc":{"start":{"line":25,"column":60},"end":{"line":31,"column":3}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":15},"end":{"line":27,"column":16}},"loc":{"start":{"line":27,"column":30},"end":{"line":30,"column":5}},"line":27}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"inputSourceMap":{"version":3,"sources":["user.js"],"names":["expect","chai","describe","it","done","u","User","validate","err","errors","username","to","exist","password","email"],"mappings":";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAGC,iBAAKD,MAApB;AAGAE,QAAQ,CAAC,YAAD,EAAe,YAAM;AACzBC,EAAAA,EAAE,CAAC,wCAAD,EAA2C,UAASC,IAAT,EAAe;AACxD,QAAMC,CAAC,GAAG,IAAIC,gBAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,QAAF,CAAW,UAACC,GAAD,EAAS;AAChBR,MAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWC,QAAZ,CAAN,CAA4BC,EAA5B,CAA+BC,KAA/B;AACAR,MAAAA,IAAI;AACP,KAHD;AAIH,GANC,CAAF;AAQAD,EAAAA,EAAE,CAAC,wCAAD,EAA2C,UAASC,IAAT,EAAe;AACxD,QAAMC,CAAC,GAAG,IAAIC,gBAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,QAAF,CAAW,UAACC,GAAD,EAAS;AAChBR,MAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWI,QAAZ,CAAN,CAA4BF,EAA5B,CAA+BC,KAA/B;AACAR,MAAAA,IAAI;AACP,KAHD;AAIH,GANC,CAAF;AAQAD,EAAAA,EAAE,CAAC,qCAAD,EAAwC,UAASC,IAAT,EAAe;AACrD,QAAMC,CAAC,GAAG,IAAIC,gBAAJ,EAAV;AACAD,IAAAA,CAAC,CAACE,QAAF,CAAW,UAACC,GAAD,EAAS;AAChBR,MAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWK,KAAZ,CAAN,CAAyBH,EAAzB,CAA4BC,KAA5B;AACAR,MAAAA,IAAI;AACP,KAHD;AAIH,GANC,CAAF;AAOH,CAxBO,CAAR","sourceRoot":"C:\\Users\\Ali\\code\\projects\\ecom-api\\src\\tests\\model\\","sourcesContent":["import chai from 'chai'\r\nimport User from '../../models/user'\r\n\r\nconst expect = chai.expect\r\n\r\n \r\ndescribe('User Model', () => {\r\n    it('should be invalid if username is empty', function(done) {\r\n        const u = new User()    \r\n        u.validate((err) => {\r\n            expect(err.errors.username).to.exist\r\n            done()\r\n        })\r\n    })\r\n\r\n    it('should be invalid if password is empty', function(done) {\r\n        const u = new User()    \r\n        u.validate((err) => {\r\n            expect(err.errors.password).to.exist\r\n            done()\r\n        })\r\n    })\r\n\r\n    it('should be invalid if email is empty', function(done) {\r\n        const u = new User()    \r\n        u.validate((err) => {\r\n            expect(err.errors.email).to.exist\r\n            done()\r\n        })\r\n    })\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"383c92337e84b7f1966ba47f93283c2cb9952dcb","contentHash":"b79918df2cda05c495e63000d72add6a913e4e310ff9285bab63fdbbf516d101"}}